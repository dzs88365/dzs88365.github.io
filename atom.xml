<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-09T12:37:57.467Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>戴小冲</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《富爸爸,穷爸爸》作者:罗伯特·T·清崎、莎伦·L·莱希特</title>
    <link href="http://yoursite.com/2017/02/09/%E3%80%8A%E5%AF%8C%E7%88%B8%E7%88%B8-%E7%A9%B7%E7%88%B8%E7%88%B8%E3%80%8B%E4%BD%9C%E8%80%85-%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7T%C2%B7%E6%B8%85%E5%B4%8E%E3%80%81%E8%8E%8E%E4%BC%A6%C2%B7L%C2%B7%E8%8E%B1%E5%B8%8C%E7%89%B9/"/>
    <id>http://yoursite.com/2017/02/09/《富爸爸-穷爸爸》作者-罗伯特·T·清崎、莎伦·L·莱希特/</id>
    <published>2017-02-09T12:36:35.000Z</published>
    <updated>2017-02-09T12:37:57.467Z</updated>
    
    <content type="html"><![CDATA[<p>“之所以世界上绝大多数的人为了财富奋斗终生而不可得,其主要原因在于虽然他们都曾在各种学校中学习多年,却从未真正学习到关于金钱的知识。其结果就是他们只知道为了钱而拼命工作……却从不去思索如何让钱为他们工作……”<a id="more"></a></p>
<p>作者简介</p>
<p>序言</p>
<p>第一章:富爸爸,穷爸爸</p>
<p>第一课:富人不为钱工作</p>
<p>第二课:为什么要教授财务知识</p>
<p>第三课:关注自己的事业</p>
<p>第四课:税收的历史和公司的力量</p>
<p>第五课:富人的投资</p>
<p>第六课:不要为金钱而工作</p>
<p>克服困难</p>
<p>开始行动</p>
<p>后记</p>
<p>序言<br>罗伯特主要关心的是在有产者和无产者之间日益加深的鸿沟。</p>
<p>“今天,你所能给孩子的最危险的建议就是:去学校,好好念书,然后找个安全的工作。这是旧的建议而且是坏的建议,如果你能看见在亚洲、欧洲、南美洲发生的事,你就会像我一样担忧。”</p>
<p>“像我这样的人在经济生活中有一套与你们完全不同的游戏规则,我来问你,当一家公司宣布缩 编时会如何?”</p>
<p>“会解雇人,家庭会受伤害,失业会增加。”</p>
<p>“对。但对公司会发生什么?尤其是对一个公开上市的股份公司?”我想了想说:“当宣布缩编 时上市公司股价通常会上升,市场喜欢这样的消息,因为当公司减人时成本就下降了,这意味着公司 通过自动化提高了平均劳动生产率。”</p>
<p>“对,”他说:“而当股价上升时,像我这样的人,即股东,就更富了。这就是我说的一套不同的 规则。雇员损失了,但所有者和投资者却获利了。”罗伯特不仅描述了雇员和雇主的区别,也说明了 掌握自己的命运和把它让给别人掌握的区别。</p>
<p>第一章富爸爸,穷爸爸——罗伯特·T·清崎口述</p>
<p>主要是说两个爸爸两种思维、语言及行为方式的不同，在对待生活、工作、学习等各个方面，促使了主人公从小就学会思考，而不是简单的接受一种思维理念，在对待金钱方面选择了富爸爸的方式，富爸爸教授的以六堂课形式展现。</p>
<p>一个爸爸会说:“贪财乃万恶之源”;而另一个爸爸却会说:“贫困才是万恶之本”。</p>
<p>我逐渐意识到富人之所以越来越富,穷人之所以越来越穷,中产阶级之所以总是在债务泥潭中挣扎,其主要原因之一在于他们对金钱的观念不是来自学校,而是来自家庭。</p>
<p>学校教育只专注于学术知识和专业技能的教育和培养,却忽视了理财技能的培训。</p>
<p>一个爸爸爱说“我可付不起”这样的话,而另一个爸爸则禁止用这类话,他会说:“我怎样才能付得起呢?”这两句话,一个是陈述句,另一个是疑问句,一个让你放弃,而另一个则促使你去想办法。</p>
<p>一个爸爸认为富人应该缴更多的税去照顾那些比较不幸的人;另一个爸爸则说:“税是惩勤奖懒”。一个爸爸说:“努力学习能去好公司工作”;而另一个则会说:“努力学习能发现并将有能力收购好公司”。一个说:“我不富的原因是我有孩子”;另一个则说:“我必须富的原因是我有孩子”。一个禁止在晚饭桌上谈论钱和生意,另一个则鼓励在吃饭时谈论这些话题。一个说:“挣钱的时候要小心,别去冒险”;另一个则说:“要学会管理风险”。 一个相信“我们家的房子是我们最大的投资和资产”,另一个则相信“我们家的房子是负债,如果你的房子是你最大的投资,你就有麻烦了”。两个爸爸都会准时付账,但不同的是:一个在期初支付,另一个则在期未支付。</p>
<p>一个爸爸相信政府会关心你、满足你的要求。另一个爸爸则信奉完全的经济自立,他反对这种“理所应当”的心理,并且认为正是这种心理造就了一批虚弱的、经济上依赖于他人的人。他提倡竞争。</p>
<p>一个爸爸努力存钱,而另一个不断地投资。一个爸爸教我怎样去写一份出色的简历以便找到一份好工作;另一个则教我写下雄心勃勃的事业规划和财务计划,进而创造创业的机会。</p>
<p>穷爸爸总是说:“我从不富有”,于是这句话就变成了事实。富有的爸爸则总是把自己说成是一个富人。他拒绝某事时会这样说:“我是一个富人,而富人从不这么做”,甚至当一次严重的挫折使他破产后,他仍然把自己当作是富人。他会这样鼓励自己:“穷人和破产者之间的区别是:破产是暂时的,而贫穷是永久的。”</p>
<p>我的穷爸爸会说:“我对钱不感兴趣”或“钱对我来说不重要”,富爸爸则说:“金钱就是力量”。</p>
<p>“我不为钱工作”,这是他说了一遍又一遍的话,“钱要为我工作。”在我9岁那年,我最终决定听富爸爸的话并向他学习挣钱。</p>
<p>第一课 富人不为钱工作</p>
<p>第二课 为什么要教授财务知识</p>
<p>第三课 关注自己的事业</p>
<p>第四课 税收的历史和公司的力量</p>
<p>第五课 富人的投资</p>
<p>第六课 不要为金钱而工作</p>
<p>第一课:富人不为钱工作<br>主人公因为与同学之间的差距想要变得富有，和同学一起收集牙膏造钱币，然后开始向富爸爸学习的机会。开始富爸爸要求每周六工作3小时，每小时10美分，在坚持四个星期后因为觉得不公平而且认为没有学习到如何变得富有而要辞职。进行了与富爸爸的第一次谈话，期间提到大多数人对待工作、工资的态度与行为，教授了第一课富人不为钱工作。在工作中发现了利用旧书办儿童读书馆，赚取了每周9.5美元收益，学习了怎样让钱为我所用了。</p>
<p>他笑着说,“但生活可不是这样的教法。你知道吗,生活才是最好的老师,大多数时候,生活并不对你说些什么,它只是推着你转,每一次推,它都像是在说‘喂,醒一醒,有些东西我想让你学学”’。</p>
<p>当时我还是不太明白富爸爸的话。“生活推着我们所有的人,有些人放弃了,有些人在抗争。学会了这一课的少数人会进步,他们欢迎生活来积极地推动他们,对他们来说,这种推动意味着他们又可以去学习一些新的东西,然后再进步。当然,大多数人还是放弃了,一部分人像你一样还在抗争。“”如果你学会了这一课,你就会成为一个智慧、快乐而富有的人。如果你没有学会,你就只会终生抱怨工作、报怨低报酬和难以相处的老板,你会生活 在一劳永逸地把你所有的钱的问题都解决的幻想中。“</p>
<p>“你们俩是第一个请求我教授如何赚钱的人,我有150多个雇员,但没有一个人请教过我这个问题。他们只是要求工作,并获得报酬。他们把一生中最好的年华用来为钱而工作,却不愿去弄明白工作到底是为了什么。”</p>
<p>穷人和中产阶级为钱而工作,富人让钱为他们工作。</p>
<p>“别担心,你只须知道,正是出于恐惧心,人们大多害怕失去工作,害怕付不起账单,害怕遭到火灾,害怕没有足够的钱,害怕挨饿,大多数人期望得到一份稳定的工作。为了寻求稳定,他们会去学习某种专业,或做生意,拼命为钱而工作,大多数人成了钱的奴隶,然后把怒气对准他们的老板。”</p>
<p>“税只是如何让钱为你所用的一个极小的部分。今天,我只是想弄清你是否有热情去了解钱这东西。大多数人都没有这样的愿望,他们只想进学校,学点专业技能,轻松工作并且挣大钱。当他们某一天醒来面临严重的财务问题时,他们已不能停止工作。这就是只知道为钱工作而不知如何让钱为你工作的代价。你有热情学习吗?“</p>
<p>避开人一生中最大的陷阱</p>
<p>“你们正在学习一生中最重要的一课,你们应该学会思考。”</p>
<p>“他们的感情代替了他们的思想。”迈克说。“正是如此,他们不去分辨真相,不去思考,只是对感受作出反应。他们感到恐惧,于是去工作,希望钱能消除恐惧,但钱不可能消除恐惧。于是,恐惧追逐着他们,他们只好又去工作,希望钱能消除恐惧,但还是无法摆脱恐惧。恐惧使他们落入工作的陷阶,挣钱——工作——挣钱,希望有一天能消除恐惧。但每天他们起床时,就会发现恐惧又同他们一起醒来了。恐惧使成千上万的人彻夜难眠,忧心忡忡。所以他们又起床去工作了,希望薪水能杀死那该死的恐惧。钱主宰着他们的生活,他们拒绝去分辨真相,钱控制了他们的情感和灵魂。”</p>
<p>“当一个人说‘我得去找份工作’,这就很可能是感情代替了思考。害怕没钱的感觉便产生了找工作的念头。”“比如说吧,如果人们害怕没有钱花,就立刻去找工作,然后挣到了钱,使恐惧感消除。这样做似乎很对。可一旦这样理解,他就不会去思考这样一个问题,一份工作能长期解决你的经济问题吗?依我看,答案是‘不能’,尤其从人的一生来看更是如此。工作只是试图用暂时的办法来解决长期的问题。”</p>
<p>“你看,我们最终都是雇员,只不过处于不同层次而且。我只希望孩子们有机会避开由恐惧和欲 望组成的陷讲,能按你喜爱的方式选用恐惧和欲望,别让恐惧和欲望控制你。这就是我想教你们的。我对教你们如何挣大把的钱没有兴趣,那解决不了问题。如果你们不先控制恐惧和欲望,即使你们有钱,也只不过是高薪的奴隶而已。“</p>
<p>“那我们该怎样避开陷阱?”</p>
<p>“造成贫穷和财务问题的主要原因是恐惧和无知,而非经济环境、政府或富人。自身的恐惧和无 知使人们难以自拔,所以你们应该去上学并且接受大学教育,而我教你们怎样不落入馅阱。”</p>
<p>这就像一幅画:驴子在拼命拉车,因为车夫在它鼻子前面放了个胡萝卜。车夫知道该把车驶到哪里,而驴却只是在追逐一个幻觉。但第二天驴依旧会去拉车,因为又有胡萝卜放在了驴子的面前。”</p>
<p>“学会让感情跟随你的思想,而不要让思想跟着你的感情。当你俩控制了感情,同意免费干活时,我就知道你们还有希望。当你们在我用更多的钱诱惑你们时,你们抵制住了感情,你们就又一次进行了思考而不是任由感情控制你们。这是第一步。“</p>
<p>“记住我以前所说的:工作只是面对长期问题的一种暂时的解决办法。大多数人心里只有一个问题,并且是短期的,那就是月末要付账了,于是又感到恐惧了。钱控制了他们的生活,或者说对钱的 无知或恐惧控制了他们的生活。所以他们就像他们的父母一样生活,早早起来去工作挣钱,而从不抽时间问问,有什么别的法子吗?他们的思想由他们的感情控制着的,而不是他们的头脑。”</p>
<p>你们会看到别人看不见的东西,机会就在你面前。大多数人看不见这种机会因为他们忙着寻找金钱和安定,所以他们得到的也就有限。当你看到一个机会时,你就已经学会了并且会在一生中不断地发现机会。当你找到机会时,我会教你其他的事。学会了这些,你就能避开生活中最大的陷阱,就不会感到恐惧了。</p>
<p>由于没有从商店的工作中得到报酬,我们不得不发挥我们的想像力去寻找挣钱的机会。从一开始我们自己的小人书阅览室起,我们开始自己赚钱,而不是依赖雇主。尤其是我们的生意给我们带来了钱,甚至于当我们不在那儿时,它也在生钱,我们的钱为我们工作了。没有付给我们工钱,富爸爸却给了我们更多的东西。</p>
<p>第二课:为什么要教授财务知识<br>看到人们越来越富裕,我却仍想提醒一句:从长期来看,重要的不是你挣了多少钱,而是要看你能留下多少钱,以及留住了多久。</p>
<p>“我该从哪儿开始”或“告诉我怎样才能快速致富”——如果你想发财,就需要学习财务知识。</p>
<p>规则1、你必须明白瓷产和负债的区别,并且尽可能地购买资产。“富人获得资产,而穷人和中产阶级获得债务,只不过他们以为那些就是资产”。“如果你想富有,你必须读懂并理解数字。”</p>
<p>资产就是能把钱放进你口袋里的东西，负债是把钱从你口袋里取走的东西。</p>
<p>由于学生们没有获得财务技能就离开了学校,成千上万受过教育的人追求到了职业上的成功,却最终发现他们仍在财务问题中挣扎。他们努力工作,但并无进展,他们所受的教育不是如何挣钱,而是如何花钱,这产生了所谓的理财态度——挣了钱后该怎么办?怎样防止别人从你手中拿走钱?你能多长时间拥有这些钱?你如何让钱为你工作?大多数人不明白为什么他们会身处财务困境,因为他们不明白现金流。一个人可能受过高等教育而且事业成功,但也可能是财务上的文盲。这种人往往比需要的更为努力地工作,因为他们知道应该如何努力工作,但却不知道如何让钱为他们工作。</p>
<p>大多数人的财务困境是由于随大溜,简单地跟从其他人所造成的。因此我们都需要不时地照照镜子,去相信我们内在的智慧而不仅只是恐惧。</p>
<p>富爸爸不是一个随大流的人,他是一个善于独立思考的人。</p>
<p>他憎恶“我们必须这么做,因为其他人都这么做”这类的话,他也憎恶“不能”这个词。如果你 想让他做什么,一个有效的方法就是对他说:“我想你办不了这件事。”</p>
<p>聪明人总是雇比他更聪明的人。</p>
<p>总之,决定拥有很昂贵的房子,而不是早早地开始证券投资,将对一个人的财务生活在以下三个 方面形成冲击:1.失去了用其他资产增值的时机。2.本可以用来投资的资本将用于支付房子的各种高额、长期开支。3.失去受教育机会。人们经常把他们的房子、储蓄和退休金计划列入他们的资产项目。 因为他们无钱投资,所以也就不去投资,这就使他们无法获得投资经验,并永远不会成为投资界 认可的“成熟投资者”。而最好的投资机会往往都是先给那些“成熟投资者”,再由他们转手给那些谨小慎微的人的,当然,在转手时他们已经拿走了绝大部分的利益。</p>
<p>作为一个自己有房子的雇员,你努力工作的结果如下:1.你为别人工作。如大多数人为工资而工作一样,你的努力使雇主或股东致富,你的工作和成功将使雇主成功并且可以提早退休。2.你为政府工作。政府在你还未看见工资时就已拿走了一部分,努力工作只是使政府的税收增加。大多数人都在为政府工作。3.你为银行工作。缴税后,你的下一笔最大支出该是偿还抵押贷款和信用卡贷款了。</p>
<p>第三课:关注自己的事业<br>麦当劳的创始人雷·克罗克：“女士们、先生们,其实我不 做汉堡包业务,我的真正生意是房地产。”</p>
<p>雷的远期商业计划中,基本业务将是出售麦当劳的各个分店给各个合伙人,他一向很重视每个分店的地理位置,因为他知道房产和位置将是每个分店获得成功的最重要的因素,而同时,当雷实施他的计划时,那些买下分店的人也将付钱从麦当劳集团手中买下分店的地。</p>
<p>第三号秘诀是:“关注自己的事业。”存在财务问题的人经常是一生为别人工作的人,许多人在他 们停止工作时就变得一无所有。</p>
<p>你的工作和你的事业之间存在着巨大的区别。</p>
<p>学校的问题是经常把你变成你所学专业的人员。变成你所学专业的人员的可 怕后果在于太多的人因此而忘了去关注自己的事业,他们耗费一生去关注别人的事业并使他人致富。</p>
<p>为了财务安全,人们需要关注自己的事业。你的事业围绕着的是你的资产,而不是你的收入。正 如以前说过的,第一号规则是要知道资产负债之间的区别,并且去买人资产。富人关心的焦点是他们 的资产而其他人关心的则是他们的收入。</p>
<p>依我看,真正的资产可以分为下列几类:1.不需我到场就可以正常运作的业务。我拥有它们,但由别人经营和管理。如果我必须在那儿工作,那它就不是我的事业而是我的职业了;2.股票;3.债券;4.共同基金;5.产生收入的房地产;6.票据(借据); 7.专利权如音乐、手稿、专利;8.任何其他有价值、可产生收入或可能增值并且有很好的流通市场的东西。</p>
<p>我喜欢小公司的股票,尤其是刚成立的公司,原因是我是一个企业家而不是一个雇员。小公司的风险是大,但是如果喜爱你所投资的对象,了解它并懂得游戏规则,风险就会减少。对于小公司,我的投资策略是:1年内脱手。另一方面我的房地产投资策略则是从小买卖开始并一点点做大,条件允许的话尽量晚一些出手,这样做的好处是可以推迟缴纳所得税,从而使资产可能戏剧般地增加。我通常持有房地产在7年以上。</p>
<p>第四课:税收的历史和公司的力量<br>我经常会听到这样的话:“为什么不让富人来承担”或“富人应缴更多的税让穷人得益。”</p>
<p>我的受过高等教育的爸爸是历史学方面的专家,而富爸爸则使自己成为了一名受欢迎的税收历史 方面的专家。</p>
<p>他解释说纳税的方法是由大众制定的并经多数人同意,它要让穷人和中产阶级看到税收是为了惩罚有钱人,因此,大众投了赞同票,并将依法纳税写人了宪法。而初衷是惩罚有钱人的税收,在现实中却惩罚了对它投赞同票的中产阶级和穷人。</p>
<p>有关企业的法律知识给予了富人超出穷人和中产阶级的极大优势。 有钱人是怎样胜过某些有专业知识的人的呢?一旦“劫富”的税法被通过,钱便开始流入政府。起初人们很高兴,可钱却被政府分配给了雇员和富人。税金通过工作和养老金的形式发放给了政府雇员,通过政府采购的形式付给了富人。</p>
<p>穷爸爸对此从不反抗,富爸爸也不反抗——但他做得更聪明,他利用公司——富人的最大秘密,</p>
<p>来达到他的目的。</p>
<p>你可能还记得我从富爸爸那里学到的第一课,那时我只是一个9岁的孩子,必须乖乖地坐着等他 决定什么时候与我谈话,我坐在他的办公室里等他叫我,可他却故意忽视我。他想让我认识到他的力量并希望有一天我自己也能具有这种力量。跟他学习的这么多年,他总在 提醒我知识就是力量,而且钱越多,需要的知识也就越多,没有知识,世界会牵着你走。富爸爸经常提醒我和迈克,最大的敌人不是老板或监工,而是税赋,税赋总想从你那里拿走更多,如果你允许的话。</p>
<p>让钱为我工作而不是我为钱工作,这是真正的力量。如果你为钱工作,你就把力量给了雇主;如果钱为你工作,你就能控制这种力量。</p>
<p>当我们掌握了让钱为我们工作的道理,富爸爸就希望我们精于计算而不让钱牵着我们走,此外,我们还需要了解法律。如果你对法律一无所知,你将很容易做错事;如果你了解法律,你就可以充分利用法律赋予你的权实现自己的事业。这也是富爸爸为什么要高薪雇来聪明的税务师和律师的原因了——给他们的钱要比付给政府的少得多。“精于计算你就不会被别人牵着转”是他给我上的最好的一课,我几乎一生都在受用。</p>
<p>“顺着公司的梯子,一步步往上爬”——“为什么不当梯子的主人?”</p>
<p>许多雇主感到建议雇员关注他们自己的事业对其本职工作不利。对某些人来说,可以肯定的确如 此,但对我而言,关注我自己的事业,增加资产,却使我成为一名更好的雇员。</p>
<p>财商是由四个方面的专门知识所构成的:第一是会计,也就是我说的财务知识。第二是投资,我称为钱生钱的科学。第三是了解市场,它是供给与需求的科学。第四是法律。它可以帮助你有效运营一个进入会计、投资和市场领域的企业并实现爆炸性地增长。了解税收优惠政策和公司法律的人能比雇员和小业主更快致富。</p>
<p>有一本书叫《股份有限公司和致富》,就对私营公司的能量方面提供了很好的视点。</p>
<p>第五课:富人的投资<br>在我的个人体验中,培养财务智慧既需要有专业知识,又需要有足够的勇气。如果畏难情绪太大,往往会压抑才能的发挥。</p>
<p>对大多数人来说,一旦涉及到金钱的问题,他们总是把安全性放在第一位。</p>
<p>为什么必须不厌其烦地提高自己的财商?为什么必须懂得财务知识?对此,我回答说,“就是为了获得更多的选择机会。”</p>
<p>今天,我发现许多人在苦苦工作、苦苦挣扎,其原因就是因为他们依然固执于陈旧的观念。他们希望事情都能原封不动,他们抵制任何变化。那些失去了工作或房子的人总在抱怨技术进步,或是埋 怨经济状况不佳以及他们的老板,却没有意识到,问题的症结在于他们本身。陈旧的思想是他们最大的包袱,也可以说是最大的债务。为什么呢?原因很简单:他们没有意识到已有的某种思想或方法在 昨天还是一种资产,但今天却已经变成了负债。</p>
<p>财务知识丰富仅仅是意味着拥有更多的选择机会而已。如果机会并不按你的设想降临,那么你还 能做点什么来改善自己的财务状况呢?如果机会降临到你头上,但你却没有钱,而银行也不来帮你,那你该做些什么来利用这一机会受益呢?如果你的预感是错误的,你所预计的事情并没有发生,你又如何将一小笔钱变成数百万美元?换句话说,当你要求的没有出现时,你能想出多少种财务方法来把 一小笔钱变成数百万美元呢?这就应该依靠你的财务智慧,要看你在解决财务问题上有怎样的开创能力了。</p>
<p>可大部分人却只知道一种方法:努力工作、储蓄或者借贷。</p>
<p>那么,为什么你想提高自己的理财能力呢?因为你想成为那种能够为自己创造机遇的人。你希望 能坦然地接受发生的任何事情,并努力使事情变得更好。很少有人知道机遇和金钱是可以创造的。但是,如果你想更幸运,挣到更多的钱,而不只是辛苦工作,那么你的理财能力就非常关键。</p>
<p>小时候,富爸爸经常教导我和迈克:金钱不是真实的资产。</p>
<p>“那金钱是什么?”我和迈克反问道,“既然金钱不是真实的资产。” “它是我们大家都认可的东西。”富爸爸回答说。 我们惟一的、最重要的资产是我们的头脑。如果受到良好训练,转瞬间它就能创造大量财富,并使财富从此不再只是三百年前国王和王后们的专属。而一个未经训练的头脑通过教给自己的家庭不正确的生活方式,将会延续给后代极度贫困的生活。</p>
<p>财商是由这四项主要技能组成的:1.财务知识。即阅读理解数字的能力。2.投资战略。即钱生钱的科学。3.市场、供给与需求。贝尔提供市场所需要的东西,比尔。用2000美元买的一套价值7.5万美元的房子,以6万美元的价格卖出,这就是抓住了市场所创造的机会的结果。市场上,总是有买方,也有卖方。4.法律规章。要关心有关会计、公司方面的法律以及州和全国的法律及规定。我们必须按规则来进行“游戏”。 不管是通过购买小型房屋还是大型公寓、公司、股票、债券、共同基金、珠宝、棒球卡,或是类 似的其他的东西来成功地获取财富,都必须具备上述基础,或者说必须同时掌握上述技能。</p>
<p>用例证的五个原因:1.激励人们学习更多的知识;2.万丈高楼平地起,希望告诫人们打好基础;3.告诉人们每个人都能取得巨大的财富;4.告诉人们条条大路通罗马。5.告诉人们财务知识并不是深奥的科学。</p>
<p>我越“老练”,就会得到越多的机会。开发财商的另一个方法,就是提供给自己更多的机会。你的财商越高,你就越容易分清一项交易是好还是坏。依靠你的智慧,你可以避免不利的交易,或者将一项不利的交易变成有利的交易。我发现,我学的东西越多——确实有许多东西值得去学——我挣的钱也就越多,这仅仅是因为随着时光的流逝我积累了更多的经验和智慧。</p>
<p>我的全部哲学就是把“种子”播在我的资产项下,这是我的公式。我从小额开始播种,有些长成 了,有些则没有。</p>
<p>如果你清楚自己在做什么,那就不是在赌博;如果你把钱投进一笔交易然后只是祈祷,那便是在 赌博。在任何情况下,成功的办法就是运用你的技术知识、智慧以及对于游戏的喜爱来减少意外情况的发生并降低风险。当然,风险总是存在的,但财商可以提高你应付意外事件发生的能力。</p>
<p>大部分人没办法致富仅仅是因为他们没有在财务上受到训练,因而不能认识到机会其实就在他们面前。</p>
<p>“我该如何着手?”富裕起来更是同样的道理,不幸的是,大部分人不富有的主要原因就在于他们太担心失去。胜利者是不怕失去的,但失败者都害怕失去。失败是成功之母,如果避开失败,也就避开了成功。</p>
<p>成为职业投资者,需要发展三种主要技能,这三种技能是成为财务能手所必要的更高要求。1.如何寻找到其他人都忽视的机会。你要用心去发现别人眼里忽视的那些机会。2.如何增加资金。一般人只会去找银行贷款,而第二种类型的投资者则知道不找银行就能融资的办法。3.怎样把精明的人们组织起来。聪明的人往往会雇佣比自己更聪明的人或与他们一道工作。这样,当你需要建议的时候,你有可以信赖的顾问。</p>
<p>风险总是无处不在,要学会驾驭风险,而不是一味回避风险。</p>
<p>第六课:不要为金钱而工作<br>“我拥有英语文学硕士学位,我还有一份体面的工作,我干嘛要去学做推销员?我是专业人士,即使我需要到学校接受再教育也是为了获得一份更好的工作,绝不是是为了去当什么推销员,我讨厌 那些推销员,他们眼里只有钱。您说说,我为什么非得去学习销售?”</p>
<p>上面写的是最畅销书作家,而不是最好的作家“，“我只是一个平庸的作家,而你则是一位优秀的作家。我去了销售学校,而你得了硕士学位。如果把这两方面结合起来,你就既是‘畅销书作家’又是‘最好的作家’。”</p>
<p>这位商务顾问最后告诉了我一句话, “他们只有一项技能,所以他们挣不到大钱。”这句话的意思是说,大部分人需要学习并掌握不止一项技能,只有这样他们的收人才能获得显著增长。以前我提到过,财商是会计、投资、市场营销和法律等各方面能力的综合。将上述四种专业技能结合起来,以钱生钱就会容易得多。为了赚钱,只有一项技能的人只能努力工作。</p>
<p>当我第一次带着我写的书《如果你想生活得富裕幸福,要不要去学校?》去见一位出版商时,他建议我将书名改为《经济学教育》。</p>
<p>富爸爸鼓励我去做恰好相反的事情。“对许多知识你只需要知道一点就足够了”,这是他的建议。富爸爸相信我会明白那些“行话”,而且懂得哪些东西是重要的,哪些东西不重要。</p>
<p>对于受过良好教育的爸爸来说,稳定的工作就是一切。而对于富爸爸来说,不断学习才是一切。</p>
<p>受过良好教育的爸爸希望我去学校学习做一名船员,而富爸爸则认为我去学校是为了学习从事国际贸易。富爸爸强调我应乘船在太平洋上航行而不是去欧洲,因为他认为“新兴国家”位于亚洲而不是欧洲。</p>
<p>当我的大部分同班同学,包括迈克,在他们的兄弟会馆内举办晚会的时候,我正在日本、泰国、新加 坡、越南、韩国、菲律宾及中国的台湾、香港等地学习贸易、人际关系、商业类型和文化。我也参加晚会,但不去任何兄弟会馆,我迅速地成熟起来了。</p>
<p>富爸爸曾给我解释说,管理一家公司最困难的工作是对人员的管理。富爸爸告诉我学习在危险形势下领导下属的重要性,“领导才能是你下一步迫切需要学习的,”他说,“如果你不是一个好的领导人,你就会被别人从背后射中,商业活动就像在战争中一样。”</p>
<p>有一句古老的格言说,“工作的意义就是‘比破产强一点’”。</p>
<p>从长远来看,教育比金钱更有价值。当我提出这些建议时,我常常听到这样的反应,“这太麻烦了”,或者“我只想做我感兴趣的事情”。 对于“太麻烦了”的说法,我问:“因此,你宁可辛苦工作一一生,并把挣来的50%的收入交给 政府?”对于另一种说法说“我只想做我感兴趣的事情”,我说:“我对进健身房做运动并不感兴趣,但我还是去练习,因为我想身体更好,活得更长久。”遗憾的是有一些古老的说法仍然颇有道理,像“你无法教会一匹老马新的技巧”,除非一个人习 惯于变化,否则改变自我是十分困难的。</p>
<p>麦当劳拥有一套出色的商务体系。许多才华横溢的人之所以贫穷,是因为他 们只是专心于做好汉堡包,而对如何运作商务体系却知之甚少。</p>
<p>成功所必要的管理素质包括:1.对现金流的管理;2.对系统(包括你本人、时间及家庭)的管理; 3.对人员的管理。</p>
<p>最重要的专门技能是销售和懂得市场营销。</p>
<p>在专业技能上非常精通既是优势也是弱点。我有许多朋友,他们非常有天赋,但他们不善于与其他人进行更多的交流去发挥他们的天赋,结果他们挣的钱少得可怜。我建议他们花一年时间来学习销售,即使什么也没挣到,可他们处理人际关系的能力会大大提高,而这种能力是无价的。</p>
<p>除了成为好的学习者、销售者和市场营销者外,我们还需要成为好老师、好学生。要想真正富有,我们要能付出也要能得到。对于那些被财务或职业所困的人来说,他们常常既缺乏给予,也无力索取。我知道许多人之所以贫穷是因为他们既不是好教师也不是好学生。</p>
<p>克服困难<br>仅掌握财务知识的人很多时候仍然不能拥有充裕的资产项目,其主要原因有五个:1.恐惧心理;2.愤世嫉俗; 3.懒惰;4.不良习惯;5.自负。</p>
<p>对损失金钱的恐惧是确实存在的,每个人都有这种恐惧心理,甚至富人也有。但恐惧本身并不成 其为问题,问题在于你如何处理恐惧心理,如何处理损失问题。处理失败方式的不同造成了人们生活 的差异,不仅是对金钱,对生活中的任何事情的处理都是这样。富人和穷人之间的主要差别在于他们处理恐惧心理的方式不同。</p>
<p>富爸爸接着解释说:“我最喜欢的是得克萨斯式的生活态度,他赢了会感到骄傲,输了也会自我 夸耀。得克萨斯人有一句谚语,‘如果你即将破产,那就破产得更严重些’。</p>
<p>富爸爸经常告诉我和迈克,在财务上不能获得成功的最大原因是大部分人的做法过于安全…… “人们因为太害怕失败,所以才会失败。”这是他常说的话。</p>
<p>对于胜利者,失败激励他们;对于失败者,失败会击垮他们。用洛克菲勒的话来说,就是“我总是试图将每一次灾难转化成机会。”</p>
<p>90%的美国公众财务困难的主要原因就在于他们是为了避免损失而理财,而不是为了赢利而理财。</p>
<p>一个安全的投资计划对于偏好安全的人来说是一个很好的计划,但是,安全地、”平衡地”投资于一个投资组合却不是一个成功的投资者应有的投资行为方式。 如果你没有什么资金而又想致富,你首先必须“集中”于一点,而不是追求“平衡”或者说是“分散风险”。那些成功者,在最初并不是追求“平衡”的,追求平衡的人只会在原地踏步而不会前进。要取得进步,你就必须先做到“不平衡”,并注意你怎样才能使自己不断取得进展。</p>
<p>如果你有致富的愿望,你必须集中精力。把很多鸡蛋放在较少的篮子里(当然你还要确信篮子的 结实程度)。不要把很少的鸡蛋放在许多篮子里。</p>
<p>原因之二:克服愤世嫉俗的心理。“天要塌下来了,天要塌下来了。”很多人都知道“小鸡的故事”,小鸡总是围着谷仓转,警告即将到来的厄运。我们知道有的人也爱这么做,其实我们每个人内心也都有“小鸡”式的想法。</p>
<p>我们会对自己产生怀疑:“我不太精明”、“我不够好”、“谁谁都比我强”等等,怀疑常常使自己寸步难行。我们总是自问“要是这样的话该怎么办”,“要是经济恰好在我投资之后开始衰退怎么办”,或者“要是我失去了工作而不能偿还借款怎么办”。有时我们的朋友或者关系密切的人会主动提醒我们注意自己的某些缺点,他们常常会说,“什么让你认为能做这些事”或者说“如果这是一个好主意,那其他人怎么不做呢”或者是“这不会起什么作用的,你根本不知道自己在说些什么”。这些怀疑的话的影响如此强烈,以至于我们无法将自己的计划付诸行动,可怕的感觉在心中滋生,有时我们甚至由此而夜不能寐。我们无法向前迈进,因为我们想守着那些安全的东西,而机会却从身边溜掉了。我们眼睁睁地看着时光流逝,心中的结使我们无所作为。在生活之中或多或少我们都会产生这样的状态。彼得·林奇,来自“忠诚马吉兰”共同基金,把“天要塌下来”的“警告”比作是“噪音”,而我们都听过这样的“噪音”。“噪音”既有来自我们头脑内部的,也有来自我们外部的,通常会来自朋友、家庭、同事和新闻媒体。</p>
<p>“愤世嫉俗者从来不会赢。”富爸爸说。“未经证实的怀疑和恐惧会产生愤世嫉俗者。</p>
<p>愤世嫉俗者抱怨现实,而成功者分析现实。富爸爸解释说,埋怨使人头脑受蒙蔽,而分析使人心明眼亮。进行分析能使成功者看到那些愤世嫉俗者无法看到的东西,也能发现被其他人都忽视了的 机会,而发现人们忽视了的机会的能力正是取得成功的关键。</p>
<p>在股票市场上,我也经常听到人们说,“我不想有损失”。我不知道是什么使他们认为我或其他投 资股市的人喜欢损失。他们不是去分析实际,而只是对另一种强有力的投资工具——股票市场不予理睬。</p>
<p>原因之三:懒惰。忙碌的人常常是最懒惰的人。</p>
<p>那么,什么能够治疗这种情性呢?答案就是“贪婪”一点。</p>
<p>他的理由是:“我不能支付这个”这句话禁锢了你的思想,使你不再去作进一步的思考。“我怎样才能支付这个?”则开启了你的头脑,迫使你去思索并寻求答案。 但是最重要的是,他觉得“我不能支付这个”是一句谎言,他坚信人的精神能够做到一切。“人类的精神力量非常非常强大“,他常说,”你自己知道你能做成任何事情“。</p>
<p>原因之四:习惯。我们的生活更多地反映我们的习惯而不是我们所受到的教育。</p>
<p>“动力,孩子,这完全是一个动力问题”富爸爸说,“如果我不支付我自己或者不支付我的贷款人,你认为谁抱怨的声音会更大些?” “当然是你的贷款人会比你叫的更响。”一个显而易见的回答,“如果你不支付给自己的话,我想你什么也不会说。” “所以你看,在我把仅有的钱先支付给自己后,要支付税款和其他贷款人的压力就会变得非常大,迫使我去寻求其他形式的收入,支付的压力成为我的动力。我会干额外的工作,开其他公司,在股票市场上买卖多几支股票以及去做任何可以使那些人不再向我叫喊的事。压力迫使我努力工作,迫使我去思考,最重要的是迫使我在钱的问题上更精明、更积极主动。然而如果我像你爸爸一样最后支付给自己,我就不会感到任何压力,但我一定会因此而破产。”</p>
<p>原因之五:傲慢。傲慢是无知的另一面。“我的知识给我带来金钱,我所不知道的东西使我失去金钱。每次当我自高自大时,我真的相信我所不知道的东西并不重要。“富爸爸经常这样告诉我。 我发现许多人试图用傲慢来掩饰自己的无知。</p>
<p>如果你知道自己在某一问题上欠缺知识,不要试图掩饰,因为那是在欺骗你自己,你应该做的是 去找一位这一领域的专家或者找一本有关这一问题的书,马上开始教育自己。</p>
<p>开始行动<br>我向你建议采取十个步骤来唤醒你的理财天赋。</p>
<p>1.我需要一个超现实的理由:精神的力量。如果你问别人是否愿意致富或者获得财务上的自由,大部人会说“愿意”。 可是一想到现实,前进的道路似乎就变得很漫长而崎岖,相比之下,为了钱工作并把剩余的钱托 付给经纪人看管似乎要更容易一些。 当我谈及这一点时,我希望能谈得轻松些,但这真的不轻松,可并非很难做到。我的建议是,给自己一个强有力的理由或目标。若非如此,你在生活中会感到步履维艰。</p>
<p>2.每天作出自己的选择:选择的力量,这是人们希望生活在一个自由国度的主要原因。我们需要有作出选择的权力。这些说法存在着一个共同的问题就是阻碍人们选择去思考这样两件事情:第一是时间,这是你最珍贵的资产;第二则是学习,因为你没有钱,你更要去学习。</p>
<p>首先投资于教育。实际上,当你还是一个穷人时,你所拥有的惟一真正的资产就是你的头脑,这是我们所控制的最强有力的工具。</p>
<p>我去参加研讨会。我每年至少要参加两次这样的培训。我喜欢听录音带,原因是录音带可以快速重放。最直接的结果是:我仍然保留住了自己过去思考问题的习惯方式,同时又学到了彼得·林奇分析同一问题或形势的思考方式。我拥有了两条思路,而不仅仅是一条,能够有不止一条的思路来分析某个问题或趋势,这实在难能可贵。今天我常常会问自己,“这件事彼得·林奇会怎样做?或者唐纳德·特拉姆、沃伦·巴菲特、 乔治·索罗斯会怎么做?”我得以进入他们深邃思想的惟一途径就是非常谦虚地阅读或倾听他们所说过的那些话。傲慢自大或吹毛求疵的人往往是缺乏自信而不敢冒风险的人。如果你想学习某些新东西,那么你就需要犯些错误,只有这样才能充分理解你所学习的知识。</p>
<p>3.慎重地选择朋友:关系的力量。首先,我不会把财务状况作为挑选朋友的标准。但我要承认我确实会特意交一些有钱的朋友,我的目标不是他们拥有的钱财,而是他们致富的知识。在很多情况下,这些有钱人会成为我的亲密朋友,当然,也不尽然。</p>
<p>注意:不要听胆小的人说的话。精明的投资者不会抱怨市场时机不对,如果错过了这一拨,他们就会去寻找下一个机会,并且在 其中找到自己的位置。对大多数投资者来说,做到这一点之所以非常困难,是因为一旦他们买人的东西不那么流行,他们就会感到害怕。胆小的投资者总是亦步亦趋地跟在众人后面,当欲望终于驱使他们冒险投资时,精明的投资者此刻已经获利退出了。明智的投资者往往购买一项不太流行的投资,他们懂得盈利是在购买时就已获得,而不是在出售时获得的,他们会耐心地等待时机实现投资增值。正 如我所说,他们并不计较市场时机,就像一位冲浪者,他们时刻等待着下一个大浪来将他们高高托起。</p>
<p>4.掌握一种模式,然后再学习一种新的模式:快速学习的力量。面包师做面包要遵循某种配方,即使这种配方只是记在脑子里。挣钱也是一样的道理,这也是金钱有时被称作“面包圈”的原因。</p>
<p>补充说一句,在今天这个快速变化的世界中,并不要求你去学太多的东西,因为当你学到时往往 已经过时了,问题在于你学得有多快,也就是我前面所说的要具备快速学习的能力,这种技能是无价之宝。如果你想赚到钱,寻找一条捷径是非常关键的。</p>
<p>5.首先支付自己:自律的力量。如果说你不能控制自己,就别想着能致富。</p>
<p>很难说这十个步骤中哪一个最重要,但对于所有这些步骤来说,第五个步骤是最难以掌握的,如 果它不是你习惯于去做的事情的话。我要冒昧说一句:是否缺乏自律是将富人、穷人和中产阶级区分开来的首要因素。</p>
<p>在我教过的企业家培训班中,我经常提醒人们,不要仅将自己的注意力集中于自己的产品、服务 或生产设备,而是要集中于开发管理才能。开创你自己的事业所必备的最重要的三种管理技能是:1.现金流量管理;2.人事管理;3.个人时间管理。</p>
<p>自律精神可以增强上述的任何一项技能。我非常重视“首先支付自己”这句话。“首先支付自己”这句话出自乔治·克拉森写的《巴比伦最富有的人》一书。这本书卖出了数百 万册,数百万的人熟练地重复这句话,却鲜有人遵循这一建议。</p>
<p>穷人有不好的习惯,一个普遍的坏习惯是随便“动用储蓄”。富人知道储蓄只能用于创造更多的钱,而不是用来支付账单。</p>
<p>6.给你的经纪人以优厚报酬:好建议的力量。我的富爸爸他坚持给予专业人士以优厚报酬,而我也采纳了这一政策。今天,我雇有身价昂贵的律师、会计师、房地产经纪人以及股票经纪人。</p>
<p>盲目使用不称职的经济人就如同童话故事里所讲得那样,你要吻许多只青蛙来寻找一位王子。记 住那句古老的格言:“如果你需要一本百科全书,千万别找百科全书推销员。”</p>
<p>“当我同任何提供有偿服务的专家见面时,我首先要弄清楚他们个人到底拥有多少财产或股票以 及他们支付税收的比例是多少,这种做法也适用于我的税务师以及我的会计师。</p>
<p>7.做一个“印第安给予者”:无私的力量。当第一批白人定居者抵达美洲时,他们对印第安人的 文化习惯感到惊讶和不适应。例如,当看到一个白人很冷时,印第安人会给那人一条毯子,可白人定居者误以为这是一份礼物,因此当印第安人要回毯子时,他们感到十分不快。印第安人也会感到失望,因为他们发现白人定居者无意归还自己的毛毯。这就是“印第安给予者”一语的由来,代表一种简单的文化误解。在“资产项目”领域,做一个“印第安给予者”对于取得财富来说十分重要。一位老练的投资者 的首要问题是:“需要多快才能收回我的投资?”他们想确定自己的投资能得到的回报,这就是投资回报率为什么重要的原因。</p>
<p>8.资产用来购买奢侈品:集中的力量。</p>
<p>和其他人一样,我也喜欢奢侈品,差别在于有些人贷款购买奢侈品并掉入一个相互攀比的陷阱,而当我想买一辆保时捷车时,最简单的方法可能也是让我的银行家提供一笔贷款,但实际上我不会这么做,我选择的是集中资源于资产项而不是负债项目。作为一种习惯,我用自己希望消费的欲望来激发并利用我的财务天赋去进行投资。要成为金钱的主人,你需要比金钱更精明,然后,金钱才能按你的要求办事,服从你,这样你就成了金钱的主人,而不是它的奴隶。这就是财商。</p>
<p>9.对英雄的崇拜:神话的力量。模仿或赶超大英雄确实是一条很好的学习途径。我跟随沃伦·巴菲特的选择进行投资,还阅读有关他对市场的所有看法;我阅读彼得·林奇的书,以弄懂他怎样选择股票;我还阅读了有关唐纳德·特拉姆的书,试图发现他进行谈判和撮合交易的技巧。</p>
<p>10.先予后取:给予的力量。我的两个爸爸都是教师。我的富爸爸教给了我一生受用的经验,那就是乐善好施的必要性。我的受到良好教育的爸爸花了很长时间广泛传授知识,却几乎没有施舍钱财。他常常说要是有额外的钱,就会施舍给别人,可是,他很少会有多余的钱。</p>
<p>如果我能给你提供一种思路的话,那一定是这个思路:当你感到手头“短缺”或“需要”什么时,首先要想到给予,只有先“予”,你才会在将来“取”得回报,无论金钱、微笑、爱情还是友谊,都 是这样。我知道人们常常会把这件事放在最后,但事实证明这样做对我总是大有种益的。我相信互利互惠的原则是正确的,我为自己想要的东西付出成本。</p>
<p>因此最后我要说,“先予后取”。我发现,越是真诚地教那些想学习的人,我从中学到的就更多。如果你想学习有关金钱的知识,那就要先告诉别人你的看法,然后,新的思想和好的灵感就会如同山 洪爆发,喷涌而出。</p>
<p>对于那些想“去做”的人来说,如何开始呢?简要地介绍一下我是怎样做的,以供大家参考。</p>
<p>停下你手头的活儿。换句话说,就是先停下来,评估一下你正在做的事中什么是有效的,什么是无效的。神智不清就是指做同一件事情却希望有不同的结果。不要做那些无效的事情,找一些有效的事情去做，寻找新的思想。我经常到书店寻找独特的、与众不同的主张,以从中获得新的投资理念,我把它们称为模式。</p>
<p>读书然后实践；参加辅导班并购买相关磁带；提出多份报价，报价本身并不重要,关键是有人报价就说明有人感兴趣；</p>
<p>一桩交易要获得盈利,必须具备两个条件:一是廉价,二是有变化。市场上有许多廉价交易,但只有存在变化时,才能使廉价交易变成有利可图的机会。通过反复观察,我就能注意到一些细微的差异。</p>
<p>至于股票,我喜欢彼得·林奇的(称雄华尔街)一书中介绍的选择价值有上升潜力股票的方法。</p>
<p>我发现寻找价值增值的方法都是相同的,不管你的投资对象是房地产、股票、共同基金、新公司、新宠物、新房子、新配偶还是一家廉价出售的洗衣店。</p>
<p>程序往往是一致的。你先要知道你在寻找什么,然后再去寻找它。只盯着小生意的人是不会有大的突破的。如果你想致富,就要首先考虑较大的生意。行动者总会击败不行动者。</p>
<p>后记<br>金钱是一种思想,如果你想要更多的钱,只需改变你的思想。任何一位白手起家的人总是在某种思想的指导下,从小生意做起,然后不断做大。投资也是这样,起初只需要投入一点钱,最后做到很大数额。我遇到过许多人,他们花了一生的时间来寻找大生意,或者试图筹集一大笔钱来做大生意,但是对于我来说,这是愚不可及的一种做法。我见到过太多的不老练的投资者将自己大量的资本投入一项交易,然后很快损失掉其中的大部分,他们可能是好的职员却不是好的投资者。</p>
<p>有关金钱的教育和智慧是非常重要的。早点动手,买一本好书,参加一些有用的研讨班,然后付诸实践,从小笔金额做起,逐渐做大。</p>
<p>金钱 是一种思想,有一本很棒的书叫《思考致富》,而不是《努力工作致富》。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“之所以世界上绝大多数的人为了财富奋斗终生而不可得,其主要原因在于虽然他们都曾在各种学校中学习多年,却从未真正学习到关于金钱的知识。其结果就是他们只知道为了钱而拼命工作……却从不去思索如何让钱为他们工作……”
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《富爸爸 穷爸爸》读书笔记</title>
    <link href="http://yoursite.com/2017/02/09/%E3%80%8A%E5%AF%8C%E7%88%B8%E7%88%B8-%E7%A9%B7%E7%88%B8%E7%88%B8%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/02/09/《富爸爸-穷爸爸》读书笔记/</id>
    <published>2017-02-09T12:28:08.000Z</published>
    <updated>2017-02-09T12:31:03.011Z</updated>
    
    <content type="html"><![CDATA[<p>罗伯特向她们讲述了：何为‘老鼠赛跑’<br>老鼠赛跑：“你可以看到受过教育、努力工作的人的生活，走的都是相似的路。孩子出生，上学，去了名牌大学，之后孩子继续深造，找到安全稳定的工作。他挣了钱，用了信用卡，购物，找刺激。结交女友，约会，结婚。夫妻都在工作，两份收入。接着他们买房，买车，度假生孩子。这样就需要更多的钱。于是他们努力地工作，寻求升迁和加薪。<a id="more"></a>加薪实现，但另一个孩子的出生使他们需要更大的房子，他们就得更努力地工作，成了模范雇员。他们又进了学校接受更多的培训，收入上升了，但他们要缴纳的工资税和土地税上升了，社会保障税和其他税都上升了，他们买了基金，用信用卡买了杂货。孩子长大，供他们上大学和为自己的退休准备大量的钱。于是，35岁的夫妇陷入了‘老鼠赛跑’，他们不停地为老板工作，通过缴税为政府工作，通过付住房贷款和信用卡贷款为银行工作，但等待他们的只是越来越多的债务和催款单，于是他们加倍努力工作，获取更多的债务，陷入财务紧张的怪圈不能自拔。接着，他们建议他们的孩子努力学习，取得好成绩，找个安全的工作或职业。”<br>这段话可能使很多人中枪，因为他们的确是这样子过来的，努力学习，取得好成绩，然后找个安全的工作或职业。现在的绝大多数人为三个企业工作，通过自己的职业为老板工作，通过缴税为政府工作，通过付住房贷款和信用卡贷款为银行工作。因此，其实你有多个雇主。<br>于是，莎伦和她女儿，还有程序员、商人、银行家等一起参与“现金流”游戏。结束之后，商人不喜欢这个游戏，他说“我不需要知道这些知识，我雇佣的人知道就可以了。”罗伯特回答：“你必须要了解这些知识，否则当大难临头时，你雇佣的人都会各自飞。”程序员也不感兴趣，但银行家和莎伦都被打动了。<br>每个人都必须了解财务相关的知识<br>一星期后，莎伦和她的丈夫邀请了罗伯特和他的妻子吃晚餐。他们讨论了很多东西，比如很多美国人只有很少或几乎没有为退休攒下钱,以及几乎破产的社会保障和医疗保障体系。<br>就罗伯特来看,孩子们正花费几年的时光在一个过时的教育体系中学一些他们永远用不着的东西,并准备依靠这些东西去一个根本不存在的世界。这是中国“大部分”的大学生正在经历的事情<br>富人在经济生活中有一套与穷人完全不同的游戏规则，比如：当一家公司宣布缩编时会如何？在穷人眼中，缩编意味着‘公司会解雇人，家庭会受伤害，失业会增加。’但缩编对公司会发生什么，尤其是对一个公开上市的股份公司？当宣布缩编时上市公司股价通常会上升，因为公司减人时成本就下降了，这意味着公司通过自动化提高了平均劳动生产率。在富人眼中，缩编意味着‘当股价上升时，像我这样的股东，就更富了。也就是雇员损失了，但所有者和投资者却获利了。’<br>罗伯特的回答不仅描述了雇员和雇主的区别,也说明了自己掌握自己的命运和让别人掌握自己命运的区别。<br>罗伯特讲述了学校体系的教育不能使你的孩子准备好应付真实的生活。他们需要知道真实生活中的游戏规则,各种不同的规则。富人有他的那套规则,而富人的规则对于绝大多数穷人和中产阶级来说还是个秘密。他还讲述了自己正在写一本书，莎伦看了书的片段后，同意共同作为罗伯特的书的作者。<br>教育是成功的基础，罗伯特说，正如学校里教的某些技能非常重要一样，经济技能和交流技能也十分重要，甚至可以说更为重要。<br>当我们作为父母建议我们的孩子“去学校,好好学习,找好工作”时,我们常常只是出于文化的习惯而那么做,因为人们总认为这些事是对的。<br>罗伯特从小被两个父亲培养大，他被告知要为两个截然不同的目标奋斗。他受过教育的父亲建议他为企业而工作,他的富有的父亲则建议他拥有自己的企业。两种道路都需要教育,但教育的科目却完全不同。他受过教育的父亲鼓励他成为聪明人,而他富有的父亲则鼓励他雇佣聪明人。鼓励孩子们成为雇员就是建议你的孩子在他的一生中缴纳超过他们应付的份额的税,只得到很少而不确定的养老金。<br>无论发生什么,我们至少有两个基本选择：玩得安全,或通过周密准备、获得教育并且唤醒你和你孩子们的经济潜能而玩得高明。<br>第一章 富爸爸 穷爸爸</p>
<p>罗伯特刚开始从各个方面介绍了他的穷爸爸和富爸爸的差异。</p>
<p>我用了很多的时间,问自己诸如“他为什么会那样说”之类的问题,然后又对另一个爸爸的话提出同样的疑问。如果不经过自己的思考就简单地说：“噢,他是对的,我同意”,或是拒绝说：“这个老爸不知道自己在说些什么”,我想那会容易得多。然而,这两个我所爱的观点不同的爸爸却迫使我对每一个有分歧的问题进行思考,并最终形成自己的想法。这一过程,即自己去思考和选取而不是简单地全盘接受或全盘否定的过程,在后来的漫长岁月中被证明对我是非常有益的。<br>这句话讲述了在生活中，对于不同的人不同的言论应该多进行思考，而不要简单地全盘接受或全盘否定。<br>接着，罗伯特谈到家庭教育和学校教育。第一、我逐渐意识到富人之所以越来越富,穷人之所以越来越穷,中产阶级之所以总是在债务泥潭中挣扎,其主要原因之一在于他们对金钱的观念不是来自学校,而是来自家庭。第二、据我所知,迄今为止,在美国的学校里仍没有真正开设有关“金钱”的基础课程。学校教育只专注于学术知识和专业技能的教育和培养,却忽视了理财技能的培训。<br>总的来说，我们之所以没有正确的理财观念，是家庭从小没有正确的教育以及学校没有开设理财技能的培训造成的。但是，换句话说，假若学校开设了这些课程，那么又将造成什么样的社会现象呢？<br>我认识到一个人的观念对其一生的巨大影响力。例如,一个爸爸爱说“我可付不起”这样的话,而另一个爸爸则禁止用这类话,他会说：“我怎样才能付得起呢？”这两句话,一个是陈述句,另一个是疑问句,一个让你放弃,而另一个则促使你去想办法。那很快就致富的爸爸解释道,说“我付不起”这种话会阻止你去开动脑筋想办法；而问“怎样才能付得起”则开动了你的大脑。富爸爸时常说：“脑袋越用越活,脑袋越活,挣钱就越多”。在他看来,轻易就说“我负担不起”这类话是一种精神上的懒惰。<br>所以，生活中应该多用疑问句，而少用陈述句，开动脑筋，越用越活。<br>然后，罗伯特又详细介绍了富爸爸和穷爸爸很多观念上的差异。一个爸爸教我怎样去写一份出色的简历以便找到一份好工作；另一个则教我写下雄心勃勃的事业规划和财务计划,进而创造创业的机会。作为两个强有力的爸爸的塑造品,我有幸观察到不同观念是怎样影响一个人的一生的,我发现人们的确是在以他们的思想塑造他们的生活道路。<br>人们的确是在以他们的思想塑造他们的生活道路。<br>穷爸爸总是说：“我从不富有”,于是这句话就变成了事实。富有的爸爸则总是把自己说成是一个富人。他拒绝某事时会这样说：“我是一个富人,而富人从不这么做”,甚至当一次严重的挫折使他破产后,他仍然把自己当作是富人。他会这样鼓励自己：“穷人和破产者之间的区别是：破产是暂时的,而贫穷是永久的。”<br>观念决定未来走向。<br>钱是一种力量,但更有力量的是有关理财的教育。钱来了又去,但如果你了解钱是如何运转的,你就有了驾驭它的力量,并开始积累财富。光想不干的原因是绝大部分人接受学校教育后却没有掌握钱真正的运转规律,所以他们终生都在为钱而工作。<br>第2章 第一课：富人不为钱工作</p>
<p>文章一开始从罗伯特9岁讲起，罗伯特因为同学基米很有钱，嘲笑他和迈克是穷孩子，没有邀请他们一起去海滨别墅度假这件事向他的父亲请教如何变得富有，但他的父亲似乎也不知道答案。</p>
<p>罗伯特邀请迈克成为合伙人，迈克则在一本科普书中得到一个很好的创意，他们开始收集牙膏皮，并对外人宣称这是“商业机密”，他们做得很好。在那个时候,牙膏皮还不是塑料做的,而是铅制的。他们在用铅造硬币，但随后被罗伯特的爸爸告知是违法的。他引荐了迈克的爸爸，他说迈克的爸爸似乎正在建立一个属于自己的帝国。并相信几年之内迈克的爸爸就会成为一个非常富有的人。随后，迈克的爸爸答应周六约见他们，见到迈克的爸爸后，迈克的爸爸强制让他们为他工作，每小时付给他们10美分，而且不让他们提出任何问题。<br>罗伯特开始介绍富爸爸早期拥有的商业规模“9个小型超市，是‘7-11’便利店的早期版本”。工作到第四个星期，罗伯特打算推出了，迈克则告诉他说富爸爸早就预料到他会退出，周六将给罗伯特答案。<br>罗伯特来到富爸爸家里，富爸爸开口便问：“你要求加薪,否则你就不干了,是吗？”<br>罗伯特说：“就像镇上每个人说的那样,你言而无信,还贪心。你想要所有的钱而毫不关心你的雇员。此外,你一点儿也不尊重我,让我等了这么久。我只是个小孩,我应该得到优待！”<br>富爸爸说：“不错,还不到1个月,你已经有点像我的其他雇员了。”<br>罗伯特继续说：“自从我为那几个小钱干活以来,你甚至没和我说过话！10美分1小时！哈,我应该到政府那儿告你！你知道,我们有《童工法》,我爸可是为政府工作的。”<br>富爸爸说：“现在你看上去就像大多数给我干过活的人了,他们要么被解雇要么辞职不干了。”<br>我想到了生活中大多数的雇员都在照着富爸爸说的剧本进行。罗伯特认为富爸爸什么也没教他，只是在压榨他，因为富爸爸从没有和他说过话。而富爸爸告诉他：“教东西靠说和讲，那是学校教的法子；但生活可不是这样的教法。每次生活推着你转，就好像在说‘喂,醒一醒,有些东西我想让你学学’。”<br>富爸爸说：“假如你弄懂了生活这门大课,做任何事情你都会游刃有余。如果你学会了这一课,你就会成为一个智慧、快乐而富有的人。如果你没有学会,你就只会终生抱怨工作、报怨低报酬和难以相处的老板,你会生活在一劳永逸地把你所有的钱的问题都解决的幻想中。”<br>生活这门课，学生时代，谁也没教你。<br>富爸爸说：“你最好改变一下观点,停止责备我,你是不是以为我有毛病。如果你认为我有病,你得想法儿改变我；如果你认为问题在你那儿,你就得去学习,然后改变自己,让自己变得更聪明。大多数人认为世界上除了自己外,其他人都应该改变。让我告诉你吧,改变自己比改变他人更容易。”<br>改变自己比改变他人更容易，但问题是，改变自己确实一件相当困难的事。<br>罗伯特听了之后还是不明白，富爸爸就问：“反过来，如果问题的确在我，你应该怎么办？”罗伯特回答：“请你提高我的工资,对我更尊重些并教我如何赚钱。”富爸爸则回答：“大部分人会这么干,他们辞职,然后去找另一份工作,期望能得到更好的机会、更高的报酬,认为一份新的工作或更高的报酬会解决所有问题。而在大多数情况下,这是不可能的。”随后，富爸爸告诉他要进行思考。富爸爸独特的观念使他的一生都与众不同。<br>穷人和中产阶级为钱而工作,富人让钱为他们工作<br>真正的学习需要精力、激情和热切的愿望。愤怒是其中一个重要的成分,因为激情正是愤怒和热爱的结合物。再多一点的钱也不会解决问题。比如你父亲,挣钱也不少,但仍会欠账。对大多数人而言,给的钱越多,他欠的债也就越多。<br>对大多数人来说，薪资总是和负债成正比<br>罗伯特问富爸爸：“学习怎样使钱为自己所用，不是每个人都想学吗？”<br>富爸爸回答：“不是，因为学习为钱工作很容易,特别是当你谈到钱时的第一感觉是恐惧时,学习为钱工作就更容易了。可学习怎样使钱为你工作却要难得多。”<br>我们努力学习就是再学习如何为钱工作。<br>什么叫做为钱工作呢？定义：“正是出于恐惧心,人们大多害怕失去工作,害怕付不起账单,害怕遭到火灾,害怕没有足够的钱,害怕挨饿,大多数人期望得到一份稳定的工作。为了寻求稳定,他们会去学习某种专业,或做生意,拼命为钱而工作,大多数人成了钱的奴隶,然后把怒气对准他们的老板。”<br>富爸爸说：“9岁时,你已经有了为钱而工作的体验。只须把上个月重复50年,你就知道大多数人是如何度过一生的了。”罗伯特不明白。富爸爸就回答说：“你两次等着见我时有何感觉？一次是被雇用,一次是要求加薪。”所以说，对绝大多数人来说，他们为钱而工作，一生重复着两件事，一是被雇佣，一是要求加薪。<br>经典案例<br>接着，富爸爸向他初步介绍了税收这个东西。他说：“大多数雇员拿到他们工资单时都会觉得不够，还要扣除税和其他一些项目。首先，政府要先拿走一份,这就是税。你有收入时得交税,当你消费时也得交税。你存钱时得交税,你死时还得交税。”<br>你的生老病死都与税紧密地联系着<br>富爸爸说：“学习怎样让钱为你所用将是一个漫长的、不断学习的过程,或许会持续一生。大多数人上了四年大学后,教育也就到头了,可我知道我会一辈子去研究钱这东西。大多数人从不研究这个题目,他们去上班,挣工资,然后去开销,总也不明白为何老被钱所困扰,于是以为多点钱就能解决问题,却几乎没有人意识到缺乏财务知识才是他们真正的问题所在。”<br>不是多点钱就能解决问题的，而是应该多学些财务知识<br>这次，富爸爸没有支付10美分的工资，要让罗伯特免费工作，这样工作了三个星期。富爸爸来了。他叫罗伯特和迈克出去散散步，并讲授他的课程。富爸爸说：“你们正在学习一生中最重要的一课,你们应该学会思考。很多员工为一点点钱而勤奋工作,兼有一种有工作的虚幻安全感,盼着一年三周的假期和工作45年后获得的一小笔养老金。如果你喜欢这样,我就把工资提到每小时25美分。”接着，富爸爸提供工资，用金钱诱惑罗伯特和迈克，从10美分提高到5美元。富爸爸认为他们两个做的很好，没有为工资的提高动摇自己的意志。<br>应该学会思考，思考什么呢？<br>富爸爸说：“大多数人都希望有一份工资收入,之所以会这样是因为他们有恐惧和欲望之心。先说恐惧感,没钱的恐惧会刺激我们努力工作,当我们得到报酬时,贪婪或欲望又开始让我们去想所有钱能买到的东西。于是就形成了一种模式。”<br>其实，生活中很容易找到这样的人，就比如普通人来说，他的技术水平比较差，所以没钱的恐惧刺激了他向别人请教如何学习。当他能力提升了，他的贪婪或欲望就会膨胀，用钱去获得短暂的快乐。<br>富爸爸说：“很多人不去分辨真相,不去思考,只是对感受作出反应。他们感到恐惧,于是去工作,希望钱能消除恐惧,但钱不可能消除恐惧。于是,恐惧追逐着他们,他们只好又去工作,希望钱能消除恐惧,但还是无法摆脱恐惧。恐惧使他们落入工作的陷阶,挣钱——工作——挣钱,希望有一天能消除恐惧。但每天他们起床时,就会发现恐惧又同他们一起醒来了。恐惧使成千上万的人彻夜难眠,忧心忡忡。所以他们又起床去工作了,希望薪水能杀死那该死的恐惧。钱主宰着他们的生活,他们拒绝去分辨真相,钱控制了他们的情感和灵魂。”<br>恐惧，很多人害怕没钱,钱控制了他们的情感和灵魂。<br>富爸爸说：“很多人希望一些东西更好、更漂亮、更有趣或更令人激动,这是相当正常的。所以人们总为了实现欲望而最终变成是为钱工作。他们认为钱能买来快乐,可用钱买来的快乐往往是短暂的,所以他们不久就需要更多的钱来买更多的快乐、更多的开心、更多的舒适和更多的安全。于是他们工作又工作,以为钱能使他们那被恐惧和欲望折磨着的灵魂平静下来,但实际上钱无法满足他们的欲望。”<br>欲望，很多人都有欲望,但实际上钱无法满足他们的欲望。<br>穷人和一般的富人都有恐惧和欲望。富爸爸掏出1美元给了乞丐，然后想罗伯特和迈克说到：“他与我的大多数雇员并没有太大差别，”<br>富爸爸的意思是乞丐和雇员一样，在钱的问题上不懂得思考。<br>富爸爸说：“好好观察你的感情,别急于行动。大多数人不懂得是他们的感情代替了他们的思想,感情是感情,你还必须学会独立思考。”<br>富爸爸说：“一份工作能长期解决你的经济问题吗？依我看,答案是‘不能’,尤其从人的一生来看更是如此。工作只是试图用暂时的办法来解决长期的问题。”<br>富爸爸说：“如果你们不先控制恐惧和欲望,即使你们有钱,也只不过是高薪的奴隶而已。”<br>控制恐惧，就是不要因为没了工作，没了工资而感到恐惧。控制欲望，有计划地处理自己的钱，而不是不经思索地花费。<br>富爸爸说：“如果一个人让恐惧和欲望之心控制，这便是无知。”富爸爸举了个例子：驴子在拼命拉车,因为车夫在它鼻子前面放了个胡萝卜。车夫知道该把车驶到哪里,而驴却只是在追逐一个幻觉。但第二天驴依旧会去拉车,因为又有胡萝卜放在了驴子的面前。<br>“驴子拉车”中，驴子代表员工，追逐幻想<br>富爸爸说：“学校是非常非常重要的地方。在学校,你学习一种技术或一门专业,并成为对社会有益的人。每一种文明都需要教师、医生、工程师、艺术家、厨求理想的安全。车夫代表企业主，决定和控制员工未来的方向。而胡萝卜则代表员工未来幻想的奢侈品，如汽车，房子等。每一种文明都需要教师、商人、警察、消防队员、士兵等等。学校培养了这些人才,所以我们的社会可以兴旺发达。但不幸的是,对许多人来说,学校是终止而不是开端。”<br>活到老，学到老。但要看看你学的是什么<br>富爸爸让罗伯特和迈克多想想马丁太太和那头驴，永远别忘了两种感情——恐惧和欲望。<br>富爸爸说：“对钱的无知导致了如此之多的恐惧和贪婪的产生。我可以给你一些例子。一个医生,想多挣些钱来更好地养活家人,就提高了收费,这就使每个人的医疗支出增加,这一切最无情地损害了穷人的利益,所以穷人的医疗状况比富人差。由于医生提高收费,则律师也提高收费；由于律师提高收费,学校老师也想增加收入,这就迫使政府提高税收。这样一环套一环,不久,在富人和穷人之间就有了一条可怕的鸿沟,混乱就会爆发。当鸿沟大到了极点时,一个社会就会崩溃。在一个教育水平高和政府管理良好的社会中价格不会上涨,实际上应该下降,价格上涨的原因是由无知引起的贪婪和恐惧。”<br>富爸爸这句话也让我明白了，我们个人自私地一再要求工资上升，导致其他行业也要求工资上升，一环扣一环，就会发现，无论多少的工资都无法解决社会问题，而只会增大穷人和富人的鸿沟。<br>迈克提到学校教育中的商学院，富爸爸说：“商学院更擅长的是制造精确而廉价的‘计算器’,他们不可能干成大事。他们所做的只是看看数字,解雇人并把生意搞糟,他们所想的只是降低成本提高价格,事实上这会带来更多的问题。计算是重要的,我希望更多的人懂得计算,但计算并不是全部。”<br>商学院的人躺枪<br>富爸爸说：“学会让感情跟随你的思想,而不要让思想跟着你的感情。”<br>富爸爸让罗伯特和迈克继续工作，并开动脑筋，去发现别人看不见的东西。富爸爸承诺如果他们两个找到机会，就教他们其他的事。<br>学会让感情跟随你的思想,而不要让思想跟着你的感情<br>小人书的故事：接下来的两个星期,罗伯特和迈克一直开动脑筋,同时继续免费工作。罗伯特恳请书商将旧的小人书送给他们，并承诺不将这些书卖掉（而且还因为他们是店里的职员，书商才卖给他们）。然后他们找了个场所，成立他们的小人书阅览室，他们雇佣了迈克的妹妹当图书管理员（因为她很爱看书），向每个来看书的孩子收取10美分，阅览室从下午2：30开到4：30,每天放学后都开。顾客呢，包括邻家的孩子，他们可以在这两个小时内看个够。10美分1人是相当便宜的，而且两小时内他们可以看五、六本书。 当顾客离开时，迈克的妹妹要负责检查,确保他们不把书带出去。她还要保管书,记录每天有多少人来,他们的名字,以及他们的要求。（这些事情在阅览室发生问题时，及时改进制度）迈克和我在三个月内平均每周可得9.5美元。我们每周付给他妹妹1美元，而且允许她免费看书，她的确看了不少书，因为她是那么爱读书。然后，我和迈克所做的事就是负责从各个店收集不要的小人书（收集的过程也可以交给别人，但可能被别人利用）。<br>小小的故事仿佛在讲述一个小企业的运作。<br>从一开始我们自己的小人书阅览室起,我们开始自己赚钱,而不是依赖雇主。尤其是我们的生意给我们带来了钱,甚至于当我们不在那儿时,它也在生钱,我们的钱为我们工作了。<br>第3章 第二课：为什么要教授财务知识</p>
<p>文章一开始讲述1990年迈克接收他爸爸的商业帝国，而1994年罗伯特在47岁达到财务自由。</p>
<p>罗伯特：“我想太多的人仍然过多地关注钱,而不是他们最大的财富——所受的教育。知识才能解决问题并创造财富,不是凭财务知识挣来的钱很快就会消失。”<br>罗伯特接着又引用了穷人中彩票和职业运动员瞬间变穷的故事，告诉我们：“从长期来看,重要的不是你挣了多少钱,而是要看你能留下多少钱,以及留住了多久。如果你想发财,就需要学习财务知识。”<br>如果你要去建立帝国大厦,你要做的第一件事就是挖个深坑,打牢基础。如果你只是想在郊区盖个小屋,你只须用6英寸厚的水泥板就够了。大多数人,当他们努力致富时,总是试图在6英寸厚的水泥板上建造帝国大厦。<br>规则：你必须明白资产和负债的区别，并且尽可能地购买资产。如果你想致富,这一点你必须知道。这就是第一号规则,也是仅有的一条规则。<br>富爸爸说：“富人获得资产,而穷人和中产阶级获得债务,只不过他们以为那些就是资产。`”<br>富爸爸相信“KISS”原则，即“傻瓜财务原则”（Keep It Simple Stupid ）。所以他特意为两个小孩简化了课程，而这又使两个孩子所打的基础更加牢固。<br>富爸爸说：“定义资产的不该用词语而是数字。如果你不能读懂数字，你就不能发掘和辩认出资产。在会计上，关键不是数字，而是数字要告诉你的东西。数字不是词语，但像词语一样，它能告诉你它想告诉你的事。”<br>富爸爸说：“一、如果你想富有，你必须读懂并理解数字。二、富人得到资产而穷人和中产阶级得到负债。”<br>富人获得资产，穷人获得负债，中产阶级获得他们认为是资产的负债<br>为了教两个不到10岁的孩子，富爸爸简化了每件事，尽可能地多用图，少用文字，并且很多年一直未加进数字。<br>罗伯特画了一张图，收入和支出画在一起，资产和负债画在一起，然后资产的箭头指向收入，表明资产产生收入。称为资产的现金流。并规定“资产”的定义：资产就是能把钱放进你口袋里的东西。<br>另一张图，收入和支出画在一起，资产和负债画在一起，然后负债的箭头指向支出，表明负债产生支出。称为负债的现金流。并规定“负债”的定义：负债是把钱从你口袋里取走的东西。<br>请观看原文的图<br>穷人的现金流量图：收入只有工资，支出有税、食物、租金、衣服、娱乐、交通费。资产和负债没有任何东西。<br>中产阶级的现金流量图：箭头从收入走到负债，然后走到支出。表明中产阶级用收入买入负债，然后负债支出了他们的费用。收入中有工资，支出有税、抵押贷款、固定支出、食物、衣服、娱乐，负债有抵押贷款、消费贷款、信用卡等。<br>富人的现金流量图：只有一个箭头，资产产生收入。资产中有股票、债券、票据、房地产、智力资产。股票产生股息，债券和票据产生利息，房地产产生租金收入、智力资产产生专利使用费。<br>更多的钱往往不能解决问题，实际上它可能使问题变得更加严重。钱常常使我们人性中的弱点显露，钱不能掩盖我们的无知。挣了钱后该怎么办？怎样防止别人从你手中拿走钱？你能多长时间拥有这些钱？你如何让钱为你工作？<br>接下来罗伯特讲述了一对新婚夫妇的故事，并结合图示。第一张图，收入提高（因为一个人变成两个人）。第二张图，收入提高，支出也相应提高。（原因一样）所以他们只有省钱才能买得起大房子。第三张图，有了孩子，买了大房子，负债就上升了。（房子需要财产税，孩子需要抚养，此外，他们还是用了信用卡、贷款等）<br>对大多数人而言,第一项支出是税。罗伯特讲述了美国最高的税不是个人所得税，而是社会保障税，雇员交了7.5%的保障税，雇主帮你支付另外7.5%的税。其实，这些钱原本都该属于你。好可怕的税<br>记住黄金规则：有黄金的人制定规则。<br>谁所拥有的资源储量大，谁就可以制定规则，就像石油么？<br>穷人和中产阶级更多地让金钱的力量控制他们。他们起床工作，却不问自己这样做的意义；每天为钱去工作，但并不真正懂得钱。于是大多数人就让钱来控制了他们，与他们对抗。大多数人的财务困境是由于随大流,简单地跟从其他人所造成的。因此我们都需要不时地照照镜子，去相信我们内在的智慧而不仅只是恐惧。<br>富爸爸不是一个随大流的人，他是一个善于独立思考的人。他憎恶“我们必须这么做,因为其他人都这么做”这类的话，他也憎恶“不能”这个词。<br>富爸爸说：“聪明人总是雇比他更聪明的人。”<br>富爸爸的意思是低学历的人用好脑袋就能雇佣高学历的人，而其实富爸爸才是最聪明的。<br>富爸爸说：“学校是生产好雇员而不是好雇主的地方。 ”<br>是学校没那个能力，还是学校故意那么做？<br>对于富爸爸来说，房子是负债；对于穷爸爸来说，房子是资产。（美国）<br>对于钱的热衷会降低财务方面的理智,我的个人经历告诉我,钱能使决策变得情绪化。对大房子来说：1、需要贷款。2、财产税。3、房子的价值不总是上市。4、最大的损失是机会损失。<br>穷爸爸的财务状况：图中资产所占的比重小于负债很多。<br>富爸爸的财务状况：图中资产所占的比重大于负债很多。<br>为什么富人越来越富？资产项目产生的收入远可弥补支出,并且可以用剩余收入对资产方进行再投资。随着投资的积累,资产会越来越多,相应地收入也就越来越多,从而形成良性循环。<br>为什么中产阶级越来越穷？中产阶级的主要收入是工资,而当工资增加的时候,税收也就增加了,更重要的是他们的支出倾向也随着收入的增加而同等增加。他们把房子作为主要资产反复进行投资,而不是投资于那些能带来收人的真正的资产上。<br>最重要的规则是弄清资产与负债之间的差别。一旦你明白了这种差别，你就会尽力去只买入能带来收入的资产，这是你走上致富之路的最好办法。不断地这样做，你的资产就会不断增加。同时还要注意降低你的负债和支出，这会让你有更多的钱投入资产项。很快，钱会多到可以让你进行一些投机性的投资了，这些投资能产生从100％到无限的回报，5000美元的投资很快就能翻到100万或更多。这种中产阶级称为“太冒险”的投资实际上并无风险,只是因为你缺乏某些很重要的财务知识而不知道究竟该怎样去看待这些投资机会。只要你拥有足够的财务知识，你就不必害怕去“冒险”。<br>罗伯特一直在灌输一个理念：学习财务知识<br>作为一个自己有房子的雇员,你努力工作的结果如下：1.你为雇主工作。你的努力使雇主或股东致富。2.你为政府工作。努力工作只是使政府的税收增加。3.你为银行工作。你的下一笔最大支出该是偿还抵押贷款和信用卡贷款了。<br>前面说过，大多数人拥有3类或更多类的雇主<br>巴克敏斯特.菲莱的定义：“财富就是支持一个人生存多长时间的能力。”或者说如果我今天停止工作，我还能活多久？（即财务生存能力）<br>富人买入资产；穷人只有支出；中产阶级买他们以为是资产的负债。<br>摘录：</p>
<p>现在的绝大多数人为三个企业工作，通过自己的职业为老板工作，通过缴税为政府工作，通过付住房贷款和信用卡贷款为银行工作。<br>他受过教育的父亲建议他为企业而工作,他的富有的父亲则建议他拥有自己的企业。<br>穷人和破产者之间的区别是：破产是暂时的,而贫穷是永久的。<br>改变自己比改变他人更容易。<br>穷人和中产阶级为钱而工作,富人让钱为他们工作<br>恐惧和欲望之心<br>在一个教育水平高和政府管理良好的社会中价格不会上涨,实际上应该下降<br>记住黄金规则：有黄金的人制定规则<br>富人买入资产；穷人只有支出；中产阶级买他们以为是资产的负债。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;罗伯特向她们讲述了：何为‘老鼠赛跑’&lt;br&gt;老鼠赛跑：“你可以看到受过教育、努力工作的人的生活，走的都是相似的路。孩子出生，上学，去了名牌大学，之后孩子继续深造，找到安全稳定的工作。他挣了钱，用了信用卡，购物，找刺激。结交女友，约会，结婚。夫妻都在工作，两份收入。接着他们买房，买车，度假生孩子。这样就需要更多的钱。于是他们努力地工作，寻求升迁和加薪。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android开发：XML简介及DOM、SAX、PULL解析对比</title>
    <link href="http://yoursite.com/2016/03/12/Android%E5%BC%80%E5%8F%91%EF%BC%9AXML%E7%AE%80%E4%BB%8B%E5%8F%8ADOM%E3%80%81SAX%E3%80%81PULL%E8%A7%A3%E6%9E%90%E5%AF%B9%E6%AF%94/"/>
    <id>http://yoursite.com/2016/03/12/Android开发：XML简介及DOM、SAX、PULL解析对比/</id>
    <published>2016-03-12T06:17:37.000Z</published>
    <updated>2017-02-04T06:19:36.430Z</updated>
    
    <content type="html"><![CDATA[<p>定义</p>
<p>JavaScript Object Notation，JavaScript的对象表示法，是一种轻量级的文本数据交换格式。</p>
<p>作用<a id="more"></a></p>
<p>用于数据的标记、存储和传输。</p>
<p>特点</p>
<p>轻量级的文本数据交换格式<br>独立于语言和平台<br>具有自我描述性</p>
<p>读写速度快，解析简单<br>语法</p>
<p>JSON值</p>
<p>名称/值<br>数组<br>对象<br>JSON实例</p>
<p>｛”skill”:{<br>          “web”:[<br>                 {<br>                  “name”:”html”,<br>                  “year”:”5”<br>                 },<br>                 {<br>                  “name”:”ht”,<br>                  “year”:”4”<br>                 }],<br>           “database”:[<br>                  {<br>                  “name”:”h”,<br>                  “year”:”2”<br>                 }]<br>`}}<br>“名称／值”对<br>无序、一个对象用“｛｝”包括，名称和值间用“：”相隔，对象间用“，”隔开；<br>“name”:”html”<br>对象<br>一个JSON对象包括多个名称/值对，在花括号里书写</p>
<p>{ “name”:”html”,”year”:”5”}<br>数组<br>数组以“［］”包括，数据的对象用逗号隔开</p>
<pre><code>{
 &quot;name&quot;:&quot;html&quot;,
 &quot;year&quot;:&quot;5&quot;
},
{
 &quot;name&quot;:&quot;ht&quot;,
 &quot;year&quot;:&quot;4&quot;
}]
</code></pre><p>web和database都是一个数组</p>
<p>语法总结</p>
<p>数组 [ 对象 { 值/对”” } ]</p>
<p>数组包含对象，对象包含值/对<br>JSON解析</p>
<p>在了解了JSON后，是时候来看下如何在Android解析JSON数据</p>
<p>解析方法</p>
<p>Android解析JSON数据的方法和XML解析类似，主要有两种：<br>基于事件驱动和基于文档驱动解析方式</p>
<p>基于事件驱动</p>
<p>主流方式：Gson解析和Jackson解析<br>Gson介绍</p>
<p>简介：使用谷歌的开源库进行解析<br>解析方式：基于事件驱动，根据所需要取的数据通过建立一个对应于JSON数据的JavaBean类就可以通过简单的操作解析出所需JSON数据<br>Gson解析</p>
<p>步骤1：创建一个与JSON数据对应的JavaBean类（用作存储需要解析的数据）<br>GSON解析的关键是重点是要根据json数据里面的结构写出一个对应的javaBean，规则是：</p>
<p>JSON的大括号对应一个对象，对象里面有key和value(值)。在JavaBean里面的类属性要和key同名。<br>JSON的方括号对应一个数组，所以在JavaBeanBean里面对应的也是数组，数据里面可以有值或者对象。<br>如果数组里面只有值没有key，就说明它只是一个纯数组，如果里面有值有key，则说明是对象数组。纯数组对应JavaBean里面的数组类型，对象数组要在Bean里面建立一个内部类，类属性就是对应的对象里面的key，建立了之后要创建一个这个内部类的对象，名字对应数组名。<br>对象里面嵌套对象时候，也要建立一个内部类，和对象数组一样，这个内部类对象的名字就是父对象的key<br>注：JavaBean类里的属性不一定要全部和JSON数据里的所有key相同，可以按需取数据，也就是你想要哪种数据，就把对应的key属性写出来，注意名字一定要对应</p>
<p>以下有两个JSON文档来说明创建JavaBean类的创建方法</p>
<p>简单的JSON数据1（对象）</p>
<p>String json = “{\”id\”:1,\”name\”:\”小明\”,\”sex\”:\”男\”,\”age\”:18,\”height\”:175}”;<br>步骤1：创建简单的JSON数据对应的JavaBean类</p>
<p>package scut.learngson;</p>
<p>public class EntityStudent {<br>    private int id;<br>    private String name;<br>    private String sex;<br>    private int age;<br>    private int height;</p>
<pre><code>public void setId(int id){
    this.id = id;
}
public void setName(String name){
    this.name = name;
}
public void setSex(String sex){
    this.sex = sex;
}
public void setAge(int age){
    this.age = age;
}
public void setHeight(int height){
    this.height = height;
}
public int getId(){
    return id;
}
public String getName(){
    return name;
}
public String getSex(){
    return sex;
}
public int getAge(){
    return age;
}
public int getHeight(){
    return  height;
}
public void show(){
            System.out.print(&quot;id=&quot; + id + &quot;,&quot;);
            System.out.print(&quot;name=&quot; + name+&quot;,&quot;);
            System.out.print(&quot;sex=&quot; + sex+&quot;,&quot;);
            System.out.print(&quot;age=&quot; + age+&quot;,&quot;);
            System.out.println(&quot;height=&quot; + height + &quot;,&quot;);

}
</code></pre><p>}<br>复杂的JSON数据（具备嵌套）</p>
<p>{“translation”:[“车”],<br>  “basic”:<br>    {<br>      “phonetic”:”kɑː”,<br>      “explains”:[“n. 汽车；车厢”,”n. (Car)人名；(土)贾尔；(法、西)卡尔；(塞)察尔”]},<br>  “query”:”car”,<br>  “errorCode”:0,<br>  “web”:[{“value”:[“汽车”,”车子”,”小汽车”],”key”:”Car”},<br>         {“value”:[“概念车”,”概念车”,”概念汽车”],”key”:”concept car”},<br>         {“value”:[“碰碰车”,”碰撞用汽车”,”碰碰汽车”],”key”:”bumper car”}]<br>}<br>步骤1：复杂的JSON数据对应的JavaBean类</p>
<p>package scut.httpgson;<br>import java.util.List;</p>
<p>public class student {<br>    public String[] translation;      //[“车”]数组<br>    public basic basic;                //basic对象里面嵌套着对象，创建一个basic内部类对象<br>    public  static class basic{        //建立内部类<br>        public String phonetic;<br>        public String[] explains;<br>    }<br>    public String query;<br>    public int errorCode;<br>    public List<wb> web;            //web是一个对象数组，创建一个web内部类对象<br>    public static class wb{<br>            public String[] value;<br>            public String key;<br>        }</wb></p>
<pre><code>public void show(){
    //输出数组
    for (int i = 0;i&lt;translation.length;i++)
    {
    System.out.println(translation[i]);
    }
    //输出内部类对象
    System.out.println(basic.phonetic);
    //输出内部类数组
    for (int i = 0;i&lt;basic.explains.length;i++){
        System.out.println(basic.explains[i]);
    }
    System.out.println(query);
    System.out.println(errorCode);
    for (int i = 0;i&lt;web.size();i++){
        for(int j = 0; j&lt;web.get(i).value.length;j++)
        {
            System.out.println(web.get(i).value[j]);
        }
        System.out.println(web.get(i).key);
    }
}
}
</code></pre><p>好了，是不是觉得根据JSON文本数据去转换成JavaBean实体类很复杂呢？其实还有个简单的方法，请使用在线JSON字符串转Java实体类，哈哈请不要打我，继续往下看吧！<br>步骤2：下载并导入GSON需要的库</p>
<p>别翻墙去谷歌官网下了，点这吧</p>
<p>步骤3：用Gson进行转换</p>
<p>package scut.learngson;</p>
<p>import android.os.Bundle;<br>import android.support.v7.app.AppCompatActivity;<br>import com.google.gson.Gson;</p>
<p>import org.json.JSONArray;<br>import org.json.JSONException;<br>import org.json.JSONObject;</p>
<p>import java.io.BufferedReader;<br>import java.io.IOException;<br>import java.io.InputStream;<br>import java.io.InputStreamReader;</p>
<p>public class MainActivity extends AppCompatActivity {</p>
<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    Gson gson = new Gson();
    //创建JavaBean类的对象
  Student student = new EntityStudent();
    String json = &quot;{\&quot;id\&quot;:1,\&quot;name\&quot;:\&quot;小明\&quot;,\&quot;sex\&quot;:\&quot;男\&quot;,\&quot;age\&quot;:18,\&quot;height\&quot;:175}&quot;;
   //用GSON方法将JSON数据转为单个类实体
    student = gson.fromJson(json,Student.class);
   //调用student方法展示解析的数据
    student.show();
  //将Java集合转换为json
    String json2 = gson.toJson(List);        System.out.println(json2);
}
</code></pre><p>}<br>总结</p>
<p>可以看到，利用GSON方法进行解析，关键在于根据json数据里面的结构写出一个对应的javaBean，而解析过程非常简单：</p>
<p>JavaBean对象 = gson.fromJson(son,javaBean类类名.class);<br>Jackson解析</p>
<p>解析原理：基于事件驱动，与GSON相同，先创建一个对应于JSON数据的JavaBean类就可以通过简单的操作解析出所需JSON数据。但和Gson解析不同的是，GSON可按需解析，即创建的JavaBean类不一定完全涵盖所要解析的JSON数据，按需创建属性，但Jackson解析对应的JavaBean必须把Json数据里面的所有key都有所对应，即必须把JSON内的数据所有解析出来，无法按需解析。但Jackson的解析速度和效率都要比GSON高</p>
<p>核心代码</p>
<p>JSON数据</p>
<p>{“student”:<br>          [<br>           {“id”:1,”name”:”小明”,”sex”:”男”,”age”:18,”height”:175,”date”:[2013,8,11]},<br>           {“id”:2,”name”:”小红”,”sex”:”女”,”age”:19,”height”:165,”date”:[2013,8,23]},<br>           {“id”:3,”name”:”小强”,”sex”:”男”,”age”:20,”height”:185,”date”:[2013,9,1]}<br>          ],<br>  “grade”:”2”<br>}<br>步骤1：建立对应的javaBean：</p>
<p>建立javaBean的对应规则和GSON一样</p>
<p>package scut.learnjackson;</p>
<p>import java.util.ArrayList;<br>import java.util.List;<br>class test {<br>    private  List<stu> student = new ArrayList<stu>();</stu></stu></p>
<pre><code>private  int grade;

public void setStudent(List&lt;stu&gt; student){
    this.student = student;
}
public List&lt;stu&gt; getStudent(){
    return student;
}
public void setGrade(int grade){
    this.grade = grade;
}
public int getGrade(){
    return grade;
}
private static class stu {
    private  int id;
    private  String name;
    private  String sex;
    private  int age;
    private  int height;
    private  int[] date;

    public void setId(int id){
        this.id = id;
    }
    public int getId(){
        return id;
    }
    public void setName(String name){
        this.name = name;
    }
    public String getName(){
        return  name;
    }
    public void setSex(String sex){
        this.sex = sex;
    }
    public String getSex(){
        return sex;
    }
    public void  setAge(int age){
        this.age = age;
    }
    public int getAge(){
        return age;
    }
    public void setHeight(int height){
        this.height = height;
    }
    public int getHeight(){
        return height;
    }
    public void setDate(int[] date){
        this.date = date;
    }
    public int[] getDate(){
        return date;
    }
}

public String tostring(){
    String str = &quot;&quot;;
    for (int i = 0;i&lt;student.size();i++){
        str += student.get(i).getId() + &quot; &quot; + student.get(i).getName() + &quot; &quot; + student.get(i).getSex() + &quot; &quot; + student.get(i).getAge() + &quot; &quot; + student.get(i).getHeight() ;
        for (int j = 0;j&lt;student.get(i).getDate().length;j++) {
            str += student.get(i).getDate()[j]+ &quot; &quot; ;
        }
        str += &quot;\n&quot;;
    }
    str += &quot;\n&quot;+getGrade();
    return str;
}
</code></pre><p>}<br>步骤2：利用Jackson方法进行解析</p>
<p>package scut.learnjackson;</p>
<p>import android.os.Bundle;<br>import android.support.v7.app.AppCompatActivity;<br>import org.codehaus.jackson.map.ObjectMapper;<br>import java.io.BufferedReader;<br>import java.io.IOException;<br>import java.io.InputStreamReader;</p>
<p>public class MainActivity extends AppCompatActivity {<br>    @Override<br>    protected void onCreate(Bundle savedInstanceState) {<br>        super.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br>        ObjectMapper objectMapper = new ObjectMapper();<br>        try {<br>            InputStreamReader isr = new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream(“assets/“ + “student.json”),”utf-8”);<br>            //从assets获取json文件<br>            BufferedReader bfr = new BufferedReader(isr);<br>            String line;<br>            StringBuilder stringBuilder = new StringBuilder();<br>            while ((line = bfr.readLine())!=null){<br>                stringBuilder.append(line);<br>            }//将JSON数据转化为字符串<br>            System.out.println(stringBuilder.toString());<br>            System.out.println(tes.tostring());</p>
<pre><code>    } catch (IOException e) {
        e.printStackTrace();
    }

}
</code></pre><p>}<br>基于文档驱动解析方式</p>
<p>主流方式：Android Studio自带org.json解析<br>解析方式：基于文档驱动，类似于XML的DOM解析方法，先把全部文件读入到内存中，然后遍历所有数据，然后根据需要检索想要的数据。<br>需要解析的JSON数据：</p>
<p>{<br>“student”:[<br>               {“id”:1,”name”:”小明”,”sex”:”男”,”age”:18,”height”:175},<br>              {“id”:2,”name”:”小红”,”sex”:”女”,”age”:19,”height”:165},<br>               {“id”:3,”name”:”小强”,”sex”:”男”,”age”:20,”height”:185}<br>            ],<br>“cat”:”it”<br>}<br>读入本地assets文件夹里面的student.son并解析</p>
<p>package scut.learngson;</p>
<p>import android.os.Bundle;<br>import org.json.JSONArray;<br>import org.json.JSONException;<br>import org.json.JSONObject;</p>
<p>import java.io.BufferedReader;<br>import java.io.IOException;<br>import java.io.InputStream;<br>import java.io.InputStreamReader;</p>
<p>public class MainActivity extends AppCompatActivity {</p>
<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    EntityStudent student = new EntityStudent();


    try {
        //从assets获取json文件
        InputStreamReader isr = new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream(&quot;assets/&quot; + &quot;student.json&quot;));
        //字节流转字符流
       BufferedReader bfr = new BufferedReader(isr);
        String line ;
        StringBuilder stringBuilder = new StringBuilder();
        while ((line = bfr.readLine())!=null){
            stringBuilder.append(line);
        }//将JSON数据转化为字符串
        JSONObject root = new JSONObject(stringBuilder.toString());
        //根据键名获取键值信息
        System.out.println(&quot;root:&quot;+root.getString(&quot;cat&quot;));
        JSONArray array = root.getJSONArray(&quot;student&quot;);
        for (int i = 0;i &lt; array.length();i++)
        {
            JSONObject stud = array.getJSONObject(i);
            System.out.println(&quot;------------------&quot;);
            System.out.print(&quot;id=&quot;+stud.getInt(&quot;id&quot;)+ &quot;,&quot;));
            System.out.print(&quot;name=&quot;+stud.getString(&quot;name&quot;)+ &quot;,&quot;));
            System.out.print(&quot;sex=&quot;+stud.getString(&quot;sex&quot;)+ &quot;,&quot;));
            System.out.print(&quot;age=&quot;+stud.getInt(&quot;age&quot;)+ &quot;,&quot;));
            System.out.println(&quot;height=&quot;+stud.getInt(&quot;height&quot;)+ &quot;,&quot;));
            bfr.close();
                isr.close();
            is.close();//依次关闭流
        }
    } catch (IOException e) {
        e.printStackTrace();
    } catch (JSONException e) {
        e.printStackTrace();
    }

}
</code></pre><p>}<br>GSON、Jackson、Android Studio自带org.son解析三类方式对比</p>
<p>Android Studio自带org.json</p>
<p>原理：基于文档驱动<br>特点：<br>优点：无<br>缺点：解析 XML 文件时会将整个 XML 文件的内容解析成树型结构存放在内存中并创建新对象，比较消耗时间和内存,解析速度和效率慢，解析方式和性能完败GSON<br>GSON方式</p>
<p>原理：基于事件驱动<br>特点：<br>优点：解析方法简单、解析效率高、占存少、灵活性高<br>使用情境<br>适用于需要处理大型 JSON文档、JSON文档结构复杂的场合<br>Jackson方式</p>
<p>原理：基于事件驱动<br>特点：<br>优点：解析效率最高、在数据量大的情况优势尤为明显、占存少<br>缺点：必须完全解析文档，如果要按需解析的话可以拆分Json来读取，操作和解析方法复杂；<br>使用情境<br>适用于需要处理超大型JSON文档、不需要对JSON文档进行按需解析、、性能要求较高的场合<br>与XML解析对比</p>
<p>对于同样作为主流的数据交换格式来说，JSON相比于XML，JSON文档大小更加小，解析方法更加简单、读写速度更快，所以JSON一定是你在数据交换格式的选型中的首选。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;定义&lt;/p&gt;
&lt;p&gt;JavaScript Object Notation，JavaScript的对象表示法，是一种轻量级的文本数据交换格式。&lt;/p&gt;
&lt;p&gt;作用
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ListView与Recycler区别</title>
    <link href="http://yoursite.com/2016/01/05/ListView%E4%B8%8ERecycler%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2016/01/05/ListView与Recycler区别/</id>
    <published>2016-01-05T05:29:37.000Z</published>
    <updated>2017-02-04T05:46:06.300Z</updated>
    
    <content type="html"><![CDATA[<p>今天这篇文章主要是向大家介绍 RecyclerView 和 ListView 的使用对比，文章主要包括以下几点的内容：</p>
<p>RecyclerView 和 ListView 布局效果的对比<br><a id="more"></a><br>RecyclerView 和 ListView 一些常用的功能 和 API 的对比</p>
<p>RecyclerView 和 ListView 在 Android L 引入嵌套滚动机制之后的对比<br>有一点需要强调下，文中所有的效果在真机上都是很流畅的，因为录制 GIF 图很容易掉帧，所以特地放慢了操作，千万不要误会成卡顿了啊！</p>
<p>布局效果对比</p>
<p>作为一枚控件，要引起开发者使用的欲望自然先是从显示效果看起（看脸的世界），ListView 大家对效果已经很熟悉了，这里直接跳过，而作为 RecyclerView，它能带给效果要比 ListView 强大得多<br>Android 默认提供的 RecyclerView 就能支持 线性布局、网格布局、瀑布流布局 三种（这里我们暂且不提代码细节，后文再说），而且同时还能够控制横向还是纵向滚动。怎样，从效果上足以碾压 ListView 有木有。</p>
<p>横向滚动的ListView开源控件是不是可以不用再找了？对，你没看错！<br>瀑布流效果的开源控件是不是可以不用再找了？对，你没看错！<br>连横向滚动的GridView都不用找了！对，你没看错！<br>到此，展示效果上的差距一目了然。</p>
<p>API 使用对比</p>
<p>当然，一个控件我们不能完全只看效果，关键还是要看实用性，看看有没有方便我们调用的 API提高我们的开发效率。所以，接下来我们就从各个方面来看看 RecyclerView 和 ListView 在提供的API调用上的一些实践比较。</p>
<p>基础使用</p>
<p>ListView 的基础使用大家再熟悉不过，其使用的关键点主要如下：</p>
<p>继承重写 BaseAdapter 类<br>自定义 ViewHolder 和 convertView 一起完成复用优化工作<br>由于 ListView 已经老生常谈，所以此处就不去写示例代码了。 RecyclerView 基础使用关键点同样有两点：</p>
<p>继承重写 RecyclerView.Adapter 和 RecyclerView.ViewHolder<br>设置布局管理器，控制布局效果<br>示例代码大致如下：</p>
<p>// 第一步：继承重写 RecyclerView.Adapter 和 RecyclerView.ViewHolder<br>public class AuthorRecyclerAdapter extends RecyclerView.Adapter<authorrecycleradapter.authorviewholder> {</authorrecycleradapter.authorviewholder></p>
<pre><code>...

@Override
public AuthorViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
    ...
    return viewHolder;
}

@Override
public void onBindViewHolder(AuthorViewHolder holder, int position) {
    ...
}

@Override
public int getItemCount() {
    if (mData == null) {
        return 0;
    }
    return mData.size();
}

class AuthorViewHolder extends RecyclerView.ViewHolder {

    ...

    public AuthorViewHolder(View itemView) {
        super(itemView);
        ...

    }
}
</code></pre><p>}</p>
<p>mRecyclerView = (RecyclerView) findViewById(R.id.recycler_view);<br>mRecyclerAdapter = new AuthorRecyclerAdapter(mData);</p>
<p>// 第二步：设置布局管理器，控制布局效果<br>LinearLayoutManager linearLayoutManager = new LinearLayoutManager(RecyclerDemoActivity.this);<br>linearLayoutManager.setOrientation(LinearLayoutManager.VERTICAL);<br>mRecyclerView.setLayoutManager(linearLayoutManager);</p>
<p>mRecyclerView.setAdapter(mRecyclerAdapter);<br>从基础使用上看，我们明显可以看出，RecyclerView 相比 ListView 在基础使用上的区别主要有如下几点：</p>
<p>ViewHolder 的编写规范化了<br>RecyclerView 复用 Item 的工作 Google 全帮你搞定，不再需要像 ListView 那样自己调用 setTag<br>RecyclerView 需要多出一步 LayoutManager 的设置工作<br>布局效果</p>
<p>在最开始就提到，RecyclerView 能够支持各种各样的布局效果，这是 ListView 所不具有的功能，那么这个功能如何实现的呢？其核心关键在于 RecyclerView.LayoutManager 类中。从前面的基础使用可以看到，RecyclerView 在使用过程中要比 ListView 多一个 setLayoutManager 步骤，这个 LayoutManager 就是用于控制我们 RecyclerView 最终的展示效果的。<br>而 LayoutManager 只是一个抽象类而已，系统已经为我们提供了三个相关的实现类 LinearLayoutManager（线性布局效果）、GridLayoutManager（网格布局效果）、StaggeredGridLayoutManager（瀑布流布局效果）。如果你想用 RecyclerView 来实现自己 YY 出来的一种效果，则应该去继承实现自己的 LayoutManager，并重写相应的方法，而不应该想着去改写 RecyclerView。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天这篇文章主要是向大家介绍 RecyclerView 和 ListView 的使用对比，文章主要包括以下几点的内容：&lt;/p&gt;
&lt;p&gt;RecyclerView 和 ListView 布局效果的对比&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Looper、Handler、MessageQueue,Message作用和存在的意义？</title>
    <link href="http://yoursite.com/2015/10/03/Looper%E3%80%81Handler%E3%80%81MessageQueue-Message%E4%BD%9C%E7%94%A8%E5%92%8C%E5%AD%98%E5%9C%A8%E7%9A%84%E6%84%8F%E4%B9%89%EF%BC%9F/"/>
    <id>http://yoursite.com/2015/10/03/Looper、Handler、MessageQueue-Message作用和存在的意义？/</id>
    <published>2015-10-03T06:39:41.000Z</published>
    <updated>2017-02-04T06:41:04.288Z</updated>
    
    <content type="html"><![CDATA[<p>Looper</p>
<p>我们知道一个线程是一段可执行的代码，当可执行代码执行完成后，线程生命周期便会终止，线程就会退出，<a id="more"></a>那么做为App的主线程，如果代码段执行完了会怎样？那么就会出现App启动后执行一段代码后就自动退出了，这是很不合理的。所以为了防止代码段被执行完，只能在代码中插入一个死循环，那么代码就不会被执行完，然后自动退出，怎么在在代码中插入一个死循环呢？那么Looper出现了，在主线程中调用Looper.prepare()…Looper.loop()就会变当前线程变成Looper线程（可以先简单理解：无限循环不退出的线程），Looper.loop()方法里面有一段死循环的代码，所以主线程会进入while(true){…}的代码段跳不出来，但是主线程也不能什么都不做吧？其实所有做的事情都在while(true){…}里面做了，主线程会在死循环中不断等其他线程给它发消息（消息包括：Activity启动，生命周期，更新UI，控件事件等），一有消息就根据消息做相应的处理，Looper的另外一部分工作就是在循环代码中会不断从消息队列挨个拿出消息给主线程处理。</p>
<p>MessageQueue</p>
<p>MessageQueue 存在的原因很简单，就是同一线程在同一时间只能处理一个消息，同一线程代码执行是不具有并发性，所以需要队列来保存消息和安排每个消息的处理顺序。多个其他线程往UI线程发送消息，UI线程必须把这些消息保持到一个列表（它同一时间不能处理那么多任务),然后挨个拿出来处理，这种设计很简单，我们平时写代码其实也经常这么做。每一个Looper线程都会维护这样一个队列，而且仅此一个，这个队列的消息只能由该线程处理。</p>
<p>Handler</p>
<p>简单说Handler用于同一个进程的线程间通信。Looper让主线程无限循环地从自己的MessageQueue拿出消息处理，既然这样我们就知道处理消息肯定是在主线程中处理的，那么怎样在其他的线程往主线程的队列里放入消息呢？其实很简单，我们知道在同一进程中线程和线程之间资源是共享的，也就是对于任何变量在任何线程都是可以访问和修改的，只要考虑并发性做好同步就行了，那么只要拿到MessageQueue 的实例，就可以往主线程的MessageQueue放入消息，主线程在轮询的时候就会在主线程处理这个消息。那么怎么拿到主线程 MessageQueue的实例，是可以拿到的(在主线程下mLooper = Looper.myLooper();mQueue = mLooper.mQueue;),但是Google 为了统一添加消息和消息的回调处理，又专门构建了Handler类，你只要在主线程构建Handler类，那么这个Handler实例就获取主线程MessageQueue实例的引用（获取方式mLooper = Looper.myLooper();mQueue = mLooper.mQueue;），Handler 在sendMessage的时候就通过这个引用往消息队列里插入新消息。Handler 的另外一个作用，就是能统一处理消息的回调。这样一个Handler发出消息又确保消息处理也是自己来做，这样的设计非常的赞。具体做法就是在队列里面的Message持有Handler的引用（哪个handler 把它放到队列里，message就持有了这个handler的引用），然后等到主线程轮询到这个message的时候，就来回调我们经常重写的Handler的handleMessage(Message msg)方法。</p>
<p>Message</p>
<p>Message 很简单了，你想让主线程做什么事，总要告诉它吧，总要传递点数据给它吧，Message就是这个载体。</p>
<p>源码分析</p>
<p>接下来我们会结合App主线程（UI线程）来讲解，从App启动后一步一步往下走分析整个Android的消息处理机制，首先在</p>
<p>ActivityThread类有我们熟悉的main的函数，App启动的代码的入口就在这里，UI线程本来只是一个普通线程，在这里会把UI线程转换成</p>
<p>Looper线程，什么是Looper线程，不急往下看就知道了。</p>
<p>publicfinalclassActivityThread{publicstaticfinalvoidmain(String[] args){       </p>
<p>……        Looper.prepareMainLooper();      </p>
<p> ……        ActivityThread thread =newActivityThread();       </p>
<p>thread.attach(false);</p>
<p>if(sMainThreadHandler ==null) {     </p>
<pre><code>sMainThreadHandler = thread.getHandler();     
</code></pre><p>  }       </p>
<p>……        Looper.loop();        ……   </p>
<p>}}</p>
<p>首先执行的是Looper.prepareMainLooper()我们来看下Looper里面的这个方法做了什么？</p>
<p>注:看之前先稍微了解下ThreadLocal是什么？</p>
<p>ThreadLocal： 线程本地存储区（Thread Local Storage，简称为TLS），每个线程都有自己的私有的本地存储区域，不同线程之间彼此不能访问对方的TLS区域。这里线程自己的本地存储区域存放是线程自己的Looper。具体看下ThreadLocal.java 的源码！</p>
<p>publicfinalclassLooper{</p>
<p>// sThreadLocal 是static的变量，可以先简单理解它相当于map，key是线程，value是Looper，</p>
<p>//那么你只要用当前的线程就能通过sThreadLocal获取当前线程所属的Looper。staticfinalThreadLocal sThreadLocal =newThreadLocal();//主线程（UI线程）的Looper 单独处理，是static类型的，通过下面的方法getMainLooper()//可以方便的获取主线程的Looper。privatestaticLooper sMainLooper;//Looper 所属的线程的消息队列finalMessageQueue mQueue;//Looper 所属的线程finalThread mThread;publicstaticvoidprepare(){       </p>
<p>prepare(true);    }</p>
<p>privatestaticvoidprepare(booleanquitAllowed){//如果线程的TLS已有数据，则会抛出异常，一个线程只能有一个Looper，prepare不能重复调用。</p>
<p>if(sThreadLocal.get() !=null) {</p>
<p>thrownewRuntimeException(“Only one Looper may be created per thread”);        }</p>
<p>//往线程的TLS插入数据，简单理解相当于map.put(Thread.currentThread(),new Looper(quitAllowed));sThreadLocal.set(newLooper(quitAllowed));    }//实际上是调用  prepare(false)，并然后给sMainLooper赋值。</p>
<p>publicstaticvoidprepareMainLooper(){      </p>
<p>  prepare(false);synchronized(Looper.class) {</p>
<p>if(sMainLooper !=null) {</p>
<p>thrownewIllegalStateException(“The main Looper has already been prepared.”);        </p>
<pre><code>}            sMainLooper = myLooper();      
</code></pre><p>  }    }//static 方法，方便获取主线程的</p>
<p>Looper.publicstaticLoopergetMainLooper(){</p>
<p>synchronized(Looper.class) {returnsMainLooper;      </p>
<p>  }    }</p>
<p>publicstatic@NullableLoopermyLooper(){//具体看ThreadLocal类的源码的get方法，//简单理解相当于map.get(Thread.currentThread()) 获取当前线程的LooperreturnsThreadLocal.get();    }}</p>
<p>看了上面的代码（仔细看下注释），我们发现Looper.prepareMainLooper()做的事件就是new了一个Looper实例并放入Looper类下面一个static的ThreadLocal sThreadLocal静态变量中，同时给sMainLooper赋值,给sMainLooper赋值是为了方便通过Looper.getMainLooper()快速获取主线程的Looper，sMainLooper是主线程的Looper可能获取会比较频繁，避免每次都到 sThreadLocal 去查找获取。</p>
<p>接下来重点是看下Looper的构造函数，看看在new Looper的时候做了什么事？</p>
<p>privateLooper(booleanquitAllowed){       </p>
<p>mQueue =newMessageQueue(quitAllowed);        </p>
<p>mThread = Thread.currentThread();}</p>
<p>看到没有，这时候给当前线程创建了消息队列MessageQueue，并且让Looper持有MessageQueue的引用。执行完Looper.prepareMainLooper()之后，主线程从普通线程转成一个Looper线程。目前的主线程线程已经有一个Looper对象和一个消息队列mQueue,引用关系如下图：（主线程可以轻松获取它的Looper，主线程的Looper持有主线程消息队列的引用）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Looper&lt;/p&gt;
&lt;p&gt;我们知道一个线程是一段可执行的代码，当可执行代码执行完成后，线程生命周期便会终止，线程就会退出，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>android的消息机制——Handler机制</title>
    <link href="http://yoursite.com/2015/09/04/android%E7%9A%84%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6%E2%80%94%E2%80%94Handler%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2015/09/04/android的消息机制——Handler机制/</id>
    <published>2015-09-04T06:22:09.000Z</published>
    <updated>2017-02-04T06:24:27.359Z</updated>
    
    <content type="html"><![CDATA[<p>能简单说得我们尽量不复杂：</p>
<p>为了避免ANR，我们会通常把 耗时操作放在子线程里面去执行，因为子线程不能更新UI，所以当子线程<a id="more"></a>需要更新的UI的时候就需要借助到安卓的消息机制，也就是Handler机制了。</p>
<p>注意：在安卓的世界里面，当 子线程 在执行耗时操作的时候，不是说你的主线程就阻塞在那里等待子线程的完成——也不是调用 Thread.wait()或是Thread.sleep()。安卓采取的方法是，主线程应该为子线程提供一个Handler，以便完成时能够提交给主线程。以这种方式设计你的应用程序，将能保证你的主线程保持对输入的响应性并能避免由于5秒输入事件的超时引发的ANR对话框。<br>一个程序的运行，就是一个进程的在执行，一个进程里面可以拥有很多个线程。</p>
<p>主线程：也叫UI线程，或称ActivityThread，用于运行四大组件和处理他们用户的交互。 ActivityThread管理应用进程的主线程的执行(相当于普通Java程序的main入口函数)，在Android系统中，在默认情况下，一个应用程序内的各个组件(如Activity、BroadcastReceiver、Service)都会在同一个进程(Process)里执行，且由此进程的主线程负责执行。<br>ActivityThread既要处理Activity组件的UI事件，又要处理Service后台服务工作，通常会忙不过来。为了解决此问题，主线程可以创建多个子线程来处理后台服务工作，而本身专心处理UI画面的事件。<br>。</p>
<p>子线程： 用于执行耗时操作，比如 I/O操作和网络请求等。（安卓3.0以后要求耗访问网络必须在子线程种执行）更新UI的工作必须交给主线程，子线程在安卓里是不允许更新UI的。<br>一、 基本概念</p>
<p>什么是消息机制？ —— 不同线程之间的通信。</p>
<p>什么安卓的消息机制，就是 Handler 运行机制。</p>
<p>安卓的消息机制有什么用？ —— 避免ANR(Application Not Responding) ，一旦发生ANR，程序就挂了，奔溃了。</p>
<p>什么时候会触发ANR？（消息机制在什么时候用？） —— 以下两个条件任意一个触发的的时候就会发生ANR</p>
<p>在activity中超过5秒的时间未能响应下一个事件<br>BroadcastReceive超过10未响应<br>造成以上两点的原因有很多，比如网络请求, 大文件的读取, 耗时的计算等都会引发ANR</p>
<p>如何避免ANR<br>首先明白两点：</p>
<p>主线程不能执行耗时操作（避免ANR）<br>子线程不能直接更新UI界面<br>结合起来这两点的解决办法是：把耗时操作放到子线程去执行，然后使用Handler去更新UI<br>注意：在安卓的世界里面，当 子线程 在执行耗时操作的时候，不是说你的主线程就阻塞在那里等待子线程的完成——也不是调用 Thread.wait()或是Thread.sleep()。安卓采取的方法是，主线程应该为子线程提供一个Handler，以便完成时能够提交给主线程。以这种方式设计你的应用程序，将能保证你的主线程保持对输入的响应性并能避免由于5秒输入事件的超时引发的ANR对话框。</p>
<p>网络请求, 大文件的读取, 复杂的计算等等这些都是耗时操作，耗时操作都应该写在子线程，但是安卓说了，除了主线程谁都不许更改UI，如果子线程更改UI，就会报出如下错误</p>
<p>android.view.ViewRootImpl$CalledFromWrongThreadException:<br>Only the original thread that created a view hierarchy can touch its views.<br>大概就是说，谁创建的View说更改，别人（子线程）少管闲事。</p>
<p>为什么系统不允许子线程更新UI<br>因为的UI控件不是线程安全的。<br>如果在多线程中并发访问可能会导致UI控件处于不可预期的状态，那为什么不对UI控件的访问加上 上锁机制 呢？因为有这么两个缺点：</p>
<p>上锁会让UI控件变得复杂和低效<br>上锁后会阻塞某些进程的执行<br>对于手机系统来说，这两个缺点是不可接受的，所以最简单高效的方法就是 —— 采用单线程模型来处理UI操作。<br>对开发者而言也不是很麻烦，只是通过Handler切换一下访问的线程的就好。<br>如何手动制造一个ANR呢<br>在Activitynew一个子线程。睡眠5秒以上，就可以啦。</p>
<p>public class MainActivity extends Activity {</p>
<pre><code>private TextView mTv;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    mTv= (TextView) findViewById(R.id.mTv);
    mTv.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            Log.d(&quot;Test&quot;, &quot;点击文字&quot;);
            try {
                Thread.sleep(300000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

        }
    });

}
</code></pre><p>}<br>如何演示子线程不能更改界面呢<br>给一个TextView弄一个点击事件，点击后new一个Thread，在这个线程的run()方法更改TextView的文字，这样就属于更改UI了，所以，不行了，挂了。</p>
<p>public class MainActivity extends Activity {</p>
<pre><code>private TextView mTv;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    mTv= (TextView) findViewById(R.id.mTv);
    mTv.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            Log.d(&quot;Test&quot;, &quot;点击文字&quot;);
            sonThreadUpdateUi();

        }
    });

}

private void sonThreadUpdateUi(){
    new Thread(new Runnable() {
        @Override
        public void run() {
            mTv.setText(&quot;子线程想要更改界面&quot;);
        }
    }).start();
}
</code></pre><p>}</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;能简单说得我们尽量不复杂：&lt;/p&gt;
&lt;p&gt;为了避免ANR，我们会通常把 耗时操作放在子线程里面去执行，因为子线程不能更新UI，所以当子线程
    
    </summary>
    
    
  </entry>
  
</feed>
